{"version":3,"file":"angular-platform-browser.js","mappings":"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","sources":["webpack://pr_bachelorproefwebshopangular/./node_modules/systemjs-webpack-interop/auto-public-path/auto-public-path.js","webpack://pr_bachelorproefwebshopangular/./node_modules/systemjs-webpack-interop/public-path.js","webpack://pr_bachelorproefwebshopangular/external system \"@angular/common@14.3.0\"","webpack://pr_bachelorproefwebshopangular/external system \"@angular/core@14.3.0\"","webpack://pr_bachelorproefwebshopangular/webpack/bootstrap","webpack://pr_bachelorproefwebshopangular/webpack/runtime/__system_context__","webpack://pr_bachelorproefwebshopangular/webpack/runtime/define property getters","webpack://pr_bachelorproefwebshopangular/webpack/runtime/hasOwnProperty shorthand","webpack://pr_bachelorproefwebshopangular/webpack/runtime/make namespace object","webpack://pr_bachelorproefwebshopangular/webpack/runtime/publicPath","webpack://pr_bachelorproefwebshopangular/./node_modules/systemjs-webpack-interop/auto-public-path/1.js","webpack://pr_bachelorproefwebshopangular/./node_modules/@angular/platform-browser/fesm2020/platform-browser.mjs"],"sourcesContent":["const resolveDirectory = require(\"../public-path\").resolveDirectory;\n\nexports.autoPublicPath = function autoPublicPath(rootDirLevel) {\n  if (!rootDirLevel) {\n    rootDirLevel = 1;\n  }\n\n  if (typeof __webpack_public_path__ !== \"undefined\") {\n    if (typeof __system_context__ === \"undefined\") {\n      throw Error(\n        \"systemjs-webpack-interop requires webpack@>=5.0.0-beta.15 and output.libraryTarget set to 'system'\"\n      );\n    }\n\n    if (!__system_context__.meta || !__system_context__.meta.url) {\n      console.error(\"__system_context__\", __system_context__);\n      throw Error(\n        \"systemjs-webpack-interop was provided an unknown SystemJS context. Expected context.meta.url, but none was provided\"\n      );\n    }\n\n    __webpack_public_path__ = resolveDirectory(\n      __system_context__.meta.url,\n      rootDirLevel\n    );\n  }\n};\n","exports.setPublicPath = function setPublicPath(\n  systemjsModuleName,\n  rootDirectoryLevel\n) {\n  if (!rootDirectoryLevel) {\n    rootDirectoryLevel = 1;\n  }\n  if (\n    typeof systemjsModuleName !== \"string\" ||\n    systemjsModuleName.trim().length === 0\n  ) {\n    throw Error(\n      \"systemjs-webpack-interop: setPublicPath(systemjsModuleName) must be called with a non-empty string 'systemjsModuleName'\"\n    );\n  }\n\n  if (\n    typeof rootDirectoryLevel !== \"number\" ||\n    rootDirectoryLevel <= 0 ||\n    isNaN(rootDirectoryLevel) ||\n    !isInteger(rootDirectoryLevel)\n  ) {\n    throw Error(\n      \"systemjs-webpack-interop: setPublicPath(systemjsModuleName, rootDirectoryLevel) must be called with a positive integer 'rootDirectoryLevel'\"\n    );\n  }\n\n  var moduleUrl;\n  try {\n    moduleUrl = window.System.resolve(systemjsModuleName);\n    if (!moduleUrl) {\n      throw Error();\n    }\n  } catch (err) {\n    throw Error(\n      \"systemjs-webpack-interop: There is no such module '\" +\n        systemjsModuleName +\n        \"' in the SystemJS registry. Did you misspell the name of your module?\"\n    );\n  }\n\n  __webpack_public_path__ = resolveDirectory(moduleUrl, rootDirectoryLevel);\n};\n\nfunction resolveDirectory(urlString, rootDirectoryLevel) {\n  // Our friend IE11 doesn't support new URL()\n  // https://github.com/single-spa/single-spa/issues/612\n  // https://gist.github.com/jlong/2428561\n\n  var a = document.createElement(\"a\");\n  a.href = urlString;\n\n  var pathname = a.pathname[0] === \"/\" ? a.pathname : \"/\" + a.pathname;\n  var numDirsProcessed = 0,\n    index = pathname.length;\n  while (numDirsProcessed !== rootDirectoryLevel && index >= 0) {\n    var char = pathname[--index];\n    if (char === \"/\") {\n      numDirsProcessed++;\n    }\n  }\n\n  if (numDirsProcessed !== rootDirectoryLevel) {\n    throw Error(\n      \"systemjs-webpack-interop: rootDirectoryLevel (\" +\n        rootDirectoryLevel +\n        \") is greater than the number of directories (\" +\n        numDirsProcessed +\n        \") in the URL path \" +\n        urlString\n    );\n  }\n\n  var finalPath = pathname.slice(0, index + 1);\n\n  return a.protocol + \"//\" + a.host + finalPath;\n}\n\nexports.resolveDirectory = resolveDirectory;\n\n// borrowed from https://github.com/parshap/js-is-integer/blob/master/index.js\nvar isInteger =\n  Number.isInteger ||\n  function isInteger(val) {\n    return typeof val === \"number\" && isFinite(val) && Math.floor(val) === val;\n  };\n","module.exports = __WEBPACK_EXTERNAL_MODULE__890__;","module.exports = __WEBPACK_EXTERNAL_MODULE__849__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","__webpack_require__.y = __system_context__;","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"./\";","const autoPublicPath = require(\"./auto-public-path\").autoPublicPath;\n\nautoPublicPath(1);\n","/**\n * @license Angular v14.3.0\n * (c) 2010-2022 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { ɵDomAdapter, ɵsetRootDomAdapter, ɵparseCookieValue, ɵgetDOM, DOCUMENT, ɵPLATFORM_BROWSER_ID, XhrFactory, CommonModule } from '@angular/common';\nexport { ɵgetDOM } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, ApplicationInitStatus, APP_INITIALIZER, Injector, ɵglobal, Injectable, Inject, ViewEncapsulation, APP_ID, RendererStyleFlags2, ɵinternalCreateApplication, ErrorHandler, ɵsetDocument, PLATFORM_ID, PLATFORM_INITIALIZER, createPlatformFactory, platformCore, ɵTESTABILITY_GETTER, ɵTESTABILITY, Testability, NgZone, TestabilityRegistry, ɵINJECTOR_SCOPE, RendererFactory2, ApplicationModule, NgModule, Optional, SkipSelf, ɵɵinject, ApplicationRef, inject, ɵConsole, forwardRef, SecurityContext, ɵallowSanitizationBypassAndThrow, ɵunwrapSafeValue, ɵ_sanitizeUrl, ɵ_sanitizeHtml, ɵbypassSanitizationTrustHtml, ɵbypassSanitizationTrustStyle, ɵbypassSanitizationTrustScript, ɵbypassSanitizationTrustUrl, ɵbypassSanitizationTrustResourceUrl, Version } from '@angular/core';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Provides DOM operations in any browser environment.\n *\n * @security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n */\nclass GenericBrowserDomAdapter extends ɵDomAdapter {\n    constructor() {\n        super(...arguments);\n        this.supportsDOMEvents = true;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A `DomAdapter` powered by full browser DOM APIs.\n *\n * @security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n */\n/* tslint:disable:requireParameterType no-console */\nclass BrowserDomAdapter extends GenericBrowserDomAdapter {\n    static makeCurrent() {\n        ɵsetRootDomAdapter(new BrowserDomAdapter());\n    }\n    onAndCancel(el, evt, listener) {\n        el.addEventListener(evt, listener, false);\n        // Needed to follow Dart's subscription semantic, until fix of\n        // https://code.google.com/p/dart/issues/detail?id=17406\n        return () => {\n            el.removeEventListener(evt, listener, false);\n        };\n    }\n    dispatchEvent(el, evt) {\n        el.dispatchEvent(evt);\n    }\n    remove(node) {\n        if (node.parentNode) {\n            node.parentNode.removeChild(node);\n        }\n    }\n    createElement(tagName, doc) {\n        doc = doc || this.getDefaultDocument();\n        return doc.createElement(tagName);\n    }\n    createHtmlDocument() {\n        return document.implementation.createHTMLDocument('fakeTitle');\n    }\n    getDefaultDocument() {\n        return document;\n    }\n    isElementNode(node) {\n        return node.nodeType === Node.ELEMENT_NODE;\n    }\n    isShadowRoot(node) {\n        return node instanceof DocumentFragment;\n    }\n    /** @deprecated No longer being used in Ivy code. To be removed in version 14. */\n    getGlobalEventTarget(doc, target) {\n        if (target === 'window') {\n            return window;\n        }\n        if (target === 'document') {\n            return doc;\n        }\n        if (target === 'body') {\n            return doc.body;\n        }\n        return null;\n    }\n    getBaseHref(doc) {\n        const href = getBaseElementHref();\n        return href == null ? null : relativePath(href);\n    }\n    resetBaseElement() {\n        baseElement = null;\n    }\n    getUserAgent() {\n        return window.navigator.userAgent;\n    }\n    getCookie(name) {\n        return ɵparseCookieValue(document.cookie, name);\n    }\n}\nlet baseElement = null;\nfunction getBaseElementHref() {\n    baseElement = baseElement || document.querySelector('base');\n    return baseElement ? baseElement.getAttribute('href') : null;\n}\n// based on urlUtils.js in AngularJS 1\nlet urlParsingNode;\nfunction relativePath(url) {\n    urlParsingNode = urlParsingNode || document.createElement('a');\n    urlParsingNode.setAttribute('href', url);\n    const pathName = urlParsingNode.pathname;\n    return pathName.charAt(0) === '/' ? pathName : `/${pathName}`;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An id that identifies a particular application being bootstrapped, that should\n * match across the client/server boundary.\n */\nconst TRANSITION_ID = new InjectionToken('TRANSITION_ID');\nfunction appInitializerFactory(transitionId, document, injector) {\n    return () => {\n        // Wait for all application initializers to be completed before removing the styles set by\n        // the server.\n        injector.get(ApplicationInitStatus).donePromise.then(() => {\n            const dom = ɵgetDOM();\n            const styles = document.querySelectorAll(`style[ng-transition=\"${transitionId}\"]`);\n            for (let i = 0; i < styles.length; i++) {\n                dom.remove(styles[i]);\n            }\n        });\n    };\n}\nconst SERVER_TRANSITION_PROVIDERS = [\n    {\n        provide: APP_INITIALIZER,\n        useFactory: appInitializerFactory,\n        deps: [TRANSITION_ID, DOCUMENT, Injector],\n        multi: true\n    },\n];\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass BrowserGetTestability {\n    addToWindow(registry) {\n        ɵglobal['getAngularTestability'] = (elem, findInAncestors = true) => {\n            const testability = registry.findTestabilityInTree(elem, findInAncestors);\n            if (testability == null) {\n                throw new Error('Could not find testability for element.');\n            }\n            return testability;\n        };\n        ɵglobal['getAllAngularTestabilities'] = () => registry.getAllTestabilities();\n        ɵglobal['getAllAngularRootElements'] = () => registry.getAllRootElements();\n        const whenAllStable = (callback /** TODO #9100 */) => {\n            const testabilities = ɵglobal['getAllAngularTestabilities']();\n            let count = testabilities.length;\n            let didWork = false;\n            const decrement = function (didWork_ /** TODO #9100 */) {\n                didWork = didWork || didWork_;\n                count--;\n                if (count == 0) {\n                    callback(didWork);\n                }\n            };\n            testabilities.forEach(function (testability /** TODO #9100 */) {\n                testability.whenStable(decrement);\n            });\n        };\n        if (!ɵglobal['frameworkStabilizers']) {\n            ɵglobal['frameworkStabilizers'] = [];\n        }\n        ɵglobal['frameworkStabilizers'].push(whenAllStable);\n    }\n    findTestabilityInTree(registry, elem, findInAncestors) {\n        if (elem == null) {\n            return null;\n        }\n        const t = registry.getTestability(elem);\n        if (t != null) {\n            return t;\n        }\n        else if (!findInAncestors) {\n            return null;\n        }\n        if (ɵgetDOM().isShadowRoot(elem)) {\n            return this.findTestabilityInTree(registry, elem.host, true);\n        }\n        return this.findTestabilityInTree(registry, elem.parentElement, true);\n    }\n}\n\n/**\n * A factory for `HttpXhrBackend` that uses the `XMLHttpRequest` browser API.\n */\nclass BrowserXhr {\n    build() {\n        return new XMLHttpRequest();\n    }\n}\nBrowserXhr.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: BrowserXhr, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nBrowserXhr.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: BrowserXhr });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: BrowserXhr, decorators: [{\n            type: Injectable\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The injection token for the event-manager plug-in service.\n *\n * @publicApi\n */\nconst EVENT_MANAGER_PLUGINS = new InjectionToken('EventManagerPlugins');\n/**\n * An injectable service that provides event management for Angular\n * through a browser plug-in.\n *\n * @publicApi\n */\nclass EventManager {\n    /**\n     * Initializes an instance of the event-manager service.\n     */\n    constructor(plugins, _zone) {\n        this._zone = _zone;\n        this._eventNameToPlugin = new Map();\n        plugins.forEach(p => p.manager = this);\n        this._plugins = plugins.slice().reverse();\n    }\n    /**\n     * Registers a handler for a specific element and event.\n     *\n     * @param element The HTML element to receive event notifications.\n     * @param eventName The name of the event to listen for.\n     * @param handler A function to call when the notification occurs. Receives the\n     * event object as an argument.\n     * @returns  A callback function that can be used to remove the handler.\n     */\n    addEventListener(element, eventName, handler) {\n        const plugin = this._findPluginFor(eventName);\n        return plugin.addEventListener(element, eventName, handler);\n    }\n    /**\n     * Registers a global handler for an event in a target view.\n     *\n     * @param target A target for global event notifications. One of \"window\", \"document\", or \"body\".\n     * @param eventName The name of the event to listen for.\n     * @param handler A function to call when the notification occurs. Receives the\n     * event object as an argument.\n     * @returns A callback function that can be used to remove the handler.\n     * @deprecated No longer being used in Ivy code. To be removed in version 14.\n     */\n    addGlobalEventListener(target, eventName, handler) {\n        const plugin = this._findPluginFor(eventName);\n        return plugin.addGlobalEventListener(target, eventName, handler);\n    }\n    /**\n     * Retrieves the compilation zone in which event listeners are registered.\n     */\n    getZone() {\n        return this._zone;\n    }\n    /** @internal */\n    _findPluginFor(eventName) {\n        const plugin = this._eventNameToPlugin.get(eventName);\n        if (plugin) {\n            return plugin;\n        }\n        const plugins = this._plugins;\n        for (let i = 0; i < plugins.length; i++) {\n            const plugin = plugins[i];\n            if (plugin.supports(eventName)) {\n                this._eventNameToPlugin.set(eventName, plugin);\n                return plugin;\n            }\n        }\n        throw new Error(`No event manager plugin found for event ${eventName}`);\n    }\n}\nEventManager.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: EventManager, deps: [{ token: EVENT_MANAGER_PLUGINS }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Injectable });\nEventManager.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: EventManager });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: EventManager, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [EVENT_MANAGER_PLUGINS]\n                }] }, { type: i0.NgZone }]; } });\nclass EventManagerPlugin {\n    constructor(_doc) {\n        this._doc = _doc;\n    }\n    addGlobalEventListener(element, eventName, handler) {\n        const target = ɵgetDOM().getGlobalEventTarget(this._doc, element);\n        if (!target) {\n            throw new Error(`Unsupported event target ${target} for event ${eventName}`);\n        }\n        return this.addEventListener(target, eventName, handler);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass SharedStylesHost {\n    constructor() {\n        /** @internal */\n        this._stylesSet = new Set();\n    }\n    addStyles(styles) {\n        const additions = new Set();\n        styles.forEach(style => {\n            if (!this._stylesSet.has(style)) {\n                this._stylesSet.add(style);\n                additions.add(style);\n            }\n        });\n        this.onStylesAdded(additions);\n    }\n    onStylesAdded(additions) { }\n    getAllStyles() {\n        return Array.from(this._stylesSet);\n    }\n}\nSharedStylesHost.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: SharedStylesHost, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nSharedStylesHost.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: SharedStylesHost });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: SharedStylesHost, decorators: [{\n            type: Injectable\n        }] });\nclass DomSharedStylesHost extends SharedStylesHost {\n    constructor(_doc) {\n        super();\n        this._doc = _doc;\n        // Maps all registered host nodes to a list of style nodes that have been added to the host node.\n        this._hostNodes = new Map();\n        this._hostNodes.set(_doc.head, []);\n    }\n    _addStylesToHost(styles, host, styleNodes) {\n        styles.forEach((style) => {\n            const styleEl = this._doc.createElement('style');\n            styleEl.textContent = style;\n            styleNodes.push(host.appendChild(styleEl));\n        });\n    }\n    addHost(hostNode) {\n        const styleNodes = [];\n        this._addStylesToHost(this._stylesSet, hostNode, styleNodes);\n        this._hostNodes.set(hostNode, styleNodes);\n    }\n    removeHost(hostNode) {\n        const styleNodes = this._hostNodes.get(hostNode);\n        if (styleNodes) {\n            styleNodes.forEach(removeStyle);\n        }\n        this._hostNodes.delete(hostNode);\n    }\n    onStylesAdded(additions) {\n        this._hostNodes.forEach((styleNodes, hostNode) => {\n            this._addStylesToHost(additions, hostNode, styleNodes);\n        });\n    }\n    ngOnDestroy() {\n        this._hostNodes.forEach(styleNodes => styleNodes.forEach(removeStyle));\n    }\n}\nDomSharedStylesHost.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: DomSharedStylesHost, deps: [{ token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable });\nDomSharedStylesHost.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: DomSharedStylesHost });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: DomSharedStylesHost, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; } });\nfunction removeStyle(styleNode) {\n    ɵgetDOM().remove(styleNode);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst NAMESPACE_URIS = {\n    'svg': 'http://www.w3.org/2000/svg',\n    'xhtml': 'http://www.w3.org/1999/xhtml',\n    'xlink': 'http://www.w3.org/1999/xlink',\n    'xml': 'http://www.w3.org/XML/1998/namespace',\n    'xmlns': 'http://www.w3.org/2000/xmlns/',\n    'math': 'http://www.w3.org/1998/MathML/',\n};\nconst COMPONENT_REGEX = /%COMP%/g;\nconst NG_DEV_MODE$1 = typeof ngDevMode === 'undefined' || !!ngDevMode;\nconst COMPONENT_VARIABLE = '%COMP%';\nconst HOST_ATTR = `_nghost-${COMPONENT_VARIABLE}`;\nconst CONTENT_ATTR = `_ngcontent-${COMPONENT_VARIABLE}`;\nfunction shimContentAttribute(componentShortId) {\n    return CONTENT_ATTR.replace(COMPONENT_REGEX, componentShortId);\n}\nfunction shimHostAttribute(componentShortId) {\n    return HOST_ATTR.replace(COMPONENT_REGEX, componentShortId);\n}\nfunction flattenStyles(compId, styles, target) {\n    for (let i = 0; i < styles.length; i++) {\n        let style = styles[i];\n        if (Array.isArray(style)) {\n            flattenStyles(compId, style, target);\n        }\n        else {\n            style = style.replace(COMPONENT_REGEX, compId);\n            target.push(style);\n        }\n    }\n    return target;\n}\nfunction decoratePreventDefault(eventHandler) {\n    // `DebugNode.triggerEventHandler` needs to know if the listener was created with\n    // decoratePreventDefault or is a listener added outside the Angular context so it can handle the\n    // two differently. In the first case, the special '__ngUnwrap__' token is passed to the unwrap\n    // the listener (see below).\n    return (event) => {\n        // Ivy uses '__ngUnwrap__' as a special token that allows us to unwrap the function\n        // so that it can be invoked programmatically by `DebugNode.triggerEventHandler`. The debug_node\n        // can inspect the listener toString contents for the existence of this special token. Because\n        // the token is a string literal, it is ensured to not be modified by compiled code.\n        if (event === '__ngUnwrap__') {\n            return eventHandler;\n        }\n        const allowDefaultBehavior = eventHandler(event);\n        if (allowDefaultBehavior === false) {\n            // TODO(tbosch): move preventDefault into event plugins...\n            event.preventDefault();\n            event.returnValue = false;\n        }\n        return undefined;\n    };\n}\nlet hasLoggedNativeEncapsulationWarning = false;\nclass DomRendererFactory2 {\n    constructor(eventManager, sharedStylesHost, appId) {\n        this.eventManager = eventManager;\n        this.sharedStylesHost = sharedStylesHost;\n        this.appId = appId;\n        this.rendererByCompId = new Map();\n        this.defaultRenderer = new DefaultDomRenderer2(eventManager);\n    }\n    createRenderer(element, type) {\n        if (!element || !type) {\n            return this.defaultRenderer;\n        }\n        switch (type.encapsulation) {\n            case ViewEncapsulation.Emulated: {\n                let renderer = this.rendererByCompId.get(type.id);\n                if (!renderer) {\n                    renderer = new EmulatedEncapsulationDomRenderer2(this.eventManager, this.sharedStylesHost, type, this.appId);\n                    this.rendererByCompId.set(type.id, renderer);\n                }\n                renderer.applyToHost(element);\n                return renderer;\n            }\n            // @ts-ignore TODO: Remove as part of FW-2290. TS complains about us dealing with an enum\n            // value that is not known (but previously was the value for ViewEncapsulation.Native)\n            case 1:\n            case ViewEncapsulation.ShadowDom:\n                // TODO(FW-2290): remove the `case 1:` fallback logic and the warning in v12.\n                if ((typeof ngDevMode === 'undefined' || ngDevMode) &&\n                    // @ts-ignore TODO: Remove as part of FW-2290. TS complains about us dealing with an\n                    // enum value that is not known (but previously was the value for\n                    // ViewEncapsulation.Native)\n                    !hasLoggedNativeEncapsulationWarning && type.encapsulation === 1) {\n                    hasLoggedNativeEncapsulationWarning = true;\n                    console.warn('ViewEncapsulation.Native is no longer supported. Falling back to ViewEncapsulation.ShadowDom. The fallback will be removed in v12.');\n                }\n                return new ShadowDomRenderer(this.eventManager, this.sharedStylesHost, element, type);\n            default: {\n                if (!this.rendererByCompId.has(type.id)) {\n                    const styles = flattenStyles(type.id, type.styles, []);\n                    this.sharedStylesHost.addStyles(styles);\n                    this.rendererByCompId.set(type.id, this.defaultRenderer);\n                }\n                return this.defaultRenderer;\n            }\n        }\n    }\n    begin() { }\n    end() { }\n}\nDomRendererFactory2.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: DomRendererFactory2, deps: [{ token: EventManager }, { token: DomSharedStylesHost }, { token: APP_ID }], target: i0.ɵɵFactoryTarget.Injectable });\nDomRendererFactory2.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: DomRendererFactory2 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: DomRendererFactory2, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: EventManager }, { type: DomSharedStylesHost }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [APP_ID]\n                }] }]; } });\nclass DefaultDomRenderer2 {\n    constructor(eventManager) {\n        this.eventManager = eventManager;\n        this.data = Object.create(null);\n        this.destroyNode = null;\n    }\n    destroy() { }\n    createElement(name, namespace) {\n        if (namespace) {\n            // TODO: `|| namespace` was added in\n            // https://github.com/angular/angular/commit/2b9cc8503d48173492c29f5a271b61126104fbdb to\n            // support how Ivy passed around the namespace URI rather than short name at the time. It did\n            // not, however extend the support to other parts of the system (setAttribute, setAttribute,\n            // and the ServerRenderer). We should decide what exactly the semantics for dealing with\n            // namespaces should be and make it consistent.\n            // Related issues:\n            // https://github.com/angular/angular/issues/44028\n            // https://github.com/angular/angular/issues/44883\n            return document.createElementNS(NAMESPACE_URIS[namespace] || namespace, name);\n        }\n        return document.createElement(name);\n    }\n    createComment(value) {\n        return document.createComment(value);\n    }\n    createText(value) {\n        return document.createTextNode(value);\n    }\n    appendChild(parent, newChild) {\n        const targetParent = isTemplateNode(parent) ? parent.content : parent;\n        targetParent.appendChild(newChild);\n    }\n    insertBefore(parent, newChild, refChild) {\n        if (parent) {\n            const targetParent = isTemplateNode(parent) ? parent.content : parent;\n            targetParent.insertBefore(newChild, refChild);\n        }\n    }\n    removeChild(parent, oldChild) {\n        if (parent) {\n            parent.removeChild(oldChild);\n        }\n    }\n    selectRootElement(selectorOrNode, preserveContent) {\n        let el = typeof selectorOrNode === 'string' ? document.querySelector(selectorOrNode) :\n            selectorOrNode;\n        if (!el) {\n            throw new Error(`The selector \"${selectorOrNode}\" did not match any elements`);\n        }\n        if (!preserveContent) {\n            el.textContent = '';\n        }\n        return el;\n    }\n    parentNode(node) {\n        return node.parentNode;\n    }\n    nextSibling(node) {\n        return node.nextSibling;\n    }\n    setAttribute(el, name, value, namespace) {\n        if (namespace) {\n            name = namespace + ':' + name;\n            const namespaceUri = NAMESPACE_URIS[namespace];\n            if (namespaceUri) {\n                el.setAttributeNS(namespaceUri, name, value);\n            }\n            else {\n                el.setAttribute(name, value);\n            }\n        }\n        else {\n            el.setAttribute(name, value);\n        }\n    }\n    removeAttribute(el, name, namespace) {\n        if (namespace) {\n            const namespaceUri = NAMESPACE_URIS[namespace];\n            if (namespaceUri) {\n                el.removeAttributeNS(namespaceUri, name);\n            }\n            else {\n                el.removeAttribute(`${namespace}:${name}`);\n            }\n        }\n        else {\n            el.removeAttribute(name);\n        }\n    }\n    addClass(el, name) {\n        el.classList.add(name);\n    }\n    removeClass(el, name) {\n        el.classList.remove(name);\n    }\n    setStyle(el, style, value, flags) {\n        if (flags & (RendererStyleFlags2.DashCase | RendererStyleFlags2.Important)) {\n            el.style.setProperty(style, value, flags & RendererStyleFlags2.Important ? 'important' : '');\n        }\n        else {\n            el.style[style] = value;\n        }\n    }\n    removeStyle(el, style, flags) {\n        if (flags & RendererStyleFlags2.DashCase) {\n            el.style.removeProperty(style);\n        }\n        else {\n            // IE requires '' instead of null\n            // see https://github.com/angular/angular/issues/7916\n            el.style[style] = '';\n        }\n    }\n    setProperty(el, name, value) {\n        NG_DEV_MODE$1 && checkNoSyntheticProp(name, 'property');\n        el[name] = value;\n    }\n    setValue(node, value) {\n        node.nodeValue = value;\n    }\n    listen(target, event, callback) {\n        NG_DEV_MODE$1 && checkNoSyntheticProp(event, 'listener');\n        if (typeof target === 'string') {\n            return this.eventManager.addGlobalEventListener(target, event, decoratePreventDefault(callback));\n        }\n        return this.eventManager.addEventListener(target, event, decoratePreventDefault(callback));\n    }\n}\nconst AT_CHARCODE = (() => '@'.charCodeAt(0))();\nfunction checkNoSyntheticProp(name, nameKind) {\n    if (name.charCodeAt(0) === AT_CHARCODE) {\n        throw new Error(`Unexpected synthetic ${nameKind} ${name} found. Please make sure that:\n  - Either \\`BrowserAnimationsModule\\` or \\`NoopAnimationsModule\\` are imported in your application.\n  - There is corresponding configuration for the animation named \\`${name}\\` defined in the \\`animations\\` field of the \\`@Component\\` decorator (see https://angular.io/api/core/Component#animations).`);\n    }\n}\nfunction isTemplateNode(node) {\n    return node.tagName === 'TEMPLATE' && node.content !== undefined;\n}\nclass EmulatedEncapsulationDomRenderer2 extends DefaultDomRenderer2 {\n    constructor(eventManager, sharedStylesHost, component, appId) {\n        super(eventManager);\n        this.component = component;\n        const styles = flattenStyles(appId + '-' + component.id, component.styles, []);\n        sharedStylesHost.addStyles(styles);\n        this.contentAttr = shimContentAttribute(appId + '-' + component.id);\n        this.hostAttr = shimHostAttribute(appId + '-' + component.id);\n    }\n    applyToHost(element) {\n        super.setAttribute(element, this.hostAttr, '');\n    }\n    createElement(parent, name) {\n        const el = super.createElement(parent, name);\n        super.setAttribute(el, this.contentAttr, '');\n        return el;\n    }\n}\nclass ShadowDomRenderer extends DefaultDomRenderer2 {\n    constructor(eventManager, sharedStylesHost, hostEl, component) {\n        super(eventManager);\n        this.sharedStylesHost = sharedStylesHost;\n        this.hostEl = hostEl;\n        this.shadowRoot = hostEl.attachShadow({ mode: 'open' });\n        this.sharedStylesHost.addHost(this.shadowRoot);\n        const styles = flattenStyles(component.id, component.styles, []);\n        for (let i = 0; i < styles.length; i++) {\n            const styleEl = document.createElement('style');\n            styleEl.textContent = styles[i];\n            this.shadowRoot.appendChild(styleEl);\n        }\n    }\n    nodeOrShadowRoot(node) {\n        return node === this.hostEl ? this.shadowRoot : node;\n    }\n    destroy() {\n        this.sharedStylesHost.removeHost(this.shadowRoot);\n    }\n    appendChild(parent, newChild) {\n        return super.appendChild(this.nodeOrShadowRoot(parent), newChild);\n    }\n    insertBefore(parent, newChild, refChild) {\n        return super.insertBefore(this.nodeOrShadowRoot(parent), newChild, refChild);\n    }\n    removeChild(parent, oldChild) {\n        return super.removeChild(this.nodeOrShadowRoot(parent), oldChild);\n    }\n    parentNode(node) {\n        return this.nodeOrShadowRoot(super.parentNode(this.nodeOrShadowRoot(node)));\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass DomEventsPlugin extends EventManagerPlugin {\n    constructor(doc) {\n        super(doc);\n    }\n    // This plugin should come last in the list of plugins, because it accepts all\n    // events.\n    supports(eventName) {\n        return true;\n    }\n    addEventListener(element, eventName, handler) {\n        element.addEventListener(eventName, handler, false);\n        return () => this.removeEventListener(element, eventName, handler);\n    }\n    removeEventListener(target, eventName, callback) {\n        return target.removeEventListener(eventName, callback);\n    }\n}\nDomEventsPlugin.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: DomEventsPlugin, deps: [{ token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable });\nDomEventsPlugin.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: DomEventsPlugin });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: DomEventsPlugin, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Defines supported modifiers for key events.\n */\nconst MODIFIER_KEYS = ['alt', 'control', 'meta', 'shift'];\n// The following values are here for cross-browser compatibility and to match the W3C standard\n// cf https://www.w3.org/TR/DOM-Level-3-Events-key/\nconst _keyMap = {\n    '\\b': 'Backspace',\n    '\\t': 'Tab',\n    '\\x7F': 'Delete',\n    '\\x1B': 'Escape',\n    'Del': 'Delete',\n    'Esc': 'Escape',\n    'Left': 'ArrowLeft',\n    'Right': 'ArrowRight',\n    'Up': 'ArrowUp',\n    'Down': 'ArrowDown',\n    'Menu': 'ContextMenu',\n    'Scroll': 'ScrollLock',\n    'Win': 'OS'\n};\n/**\n * Retrieves modifiers from key-event objects.\n */\nconst MODIFIER_KEY_GETTERS = {\n    'alt': (event) => event.altKey,\n    'control': (event) => event.ctrlKey,\n    'meta': (event) => event.metaKey,\n    'shift': (event) => event.shiftKey\n};\n/**\n * @publicApi\n * A browser plug-in that provides support for handling of key events in Angular.\n */\nclass KeyEventsPlugin extends EventManagerPlugin {\n    /**\n     * Initializes an instance of the browser plug-in.\n     * @param doc The document in which key events will be detected.\n     */\n    constructor(doc) {\n        super(doc);\n    }\n    /**\n     * Reports whether a named key event is supported.\n     * @param eventName The event name to query.\n     * @return True if the named key event is supported.\n     */\n    supports(eventName) {\n        return KeyEventsPlugin.parseEventName(eventName) != null;\n    }\n    /**\n     * Registers a handler for a specific element and key event.\n     * @param element The HTML element to receive event notifications.\n     * @param eventName The name of the key event to listen for.\n     * @param handler A function to call when the notification occurs. Receives the\n     * event object as an argument.\n     * @returns The key event that was registered.\n     */\n    addEventListener(element, eventName, handler) {\n        const parsedEvent = KeyEventsPlugin.parseEventName(eventName);\n        const outsideHandler = KeyEventsPlugin.eventCallback(parsedEvent['fullKey'], handler, this.manager.getZone());\n        return this.manager.getZone().runOutsideAngular(() => {\n            return ɵgetDOM().onAndCancel(element, parsedEvent['domEventName'], outsideHandler);\n        });\n    }\n    /**\n     * Parses the user provided full keyboard event definition and normalizes it for\n     * later internal use. It ensures the string is all lowercase, converts special\n     * characters to a standard spelling, and orders all the values consistently.\n     *\n     * @param eventName The name of the key event to listen for.\n     * @returns an object with the full, normalized string, and the dom event name\n     * or null in the case when the event doesn't match a keyboard event.\n     */\n    static parseEventName(eventName) {\n        const parts = eventName.toLowerCase().split('.');\n        const domEventName = parts.shift();\n        if ((parts.length === 0) || !(domEventName === 'keydown' || domEventName === 'keyup')) {\n            return null;\n        }\n        const key = KeyEventsPlugin._normalizeKey(parts.pop());\n        let fullKey = '';\n        let codeIX = parts.indexOf('code');\n        if (codeIX > -1) {\n            parts.splice(codeIX, 1);\n            fullKey = 'code.';\n        }\n        MODIFIER_KEYS.forEach(modifierName => {\n            const index = parts.indexOf(modifierName);\n            if (index > -1) {\n                parts.splice(index, 1);\n                fullKey += modifierName + '.';\n            }\n        });\n        fullKey += key;\n        if (parts.length != 0 || key.length === 0) {\n            // returning null instead of throwing to let another plugin process the event\n            return null;\n        }\n        // NOTE: Please don't rewrite this as so, as it will break JSCompiler property renaming.\n        //       The code must remain in the `result['domEventName']` form.\n        // return {domEventName, fullKey};\n        const result = {};\n        result['domEventName'] = domEventName;\n        result['fullKey'] = fullKey;\n        return result;\n    }\n    /**\n     * Determines whether the actual keys pressed match the configured key code string.\n     * The `fullKeyCode` event is normalized in the `parseEventName` method when the\n     * event is attached to the DOM during the `addEventListener` call. This is unseen\n     * by the end user and is normalized for internal consistency and parsing.\n     *\n     * @param event The keyboard event.\n     * @param fullKeyCode The normalized user defined expected key event string\n     * @returns boolean.\n     */\n    static matchEventFullKeyCode(event, fullKeyCode) {\n        let keycode = _keyMap[event.key] || event.key;\n        let key = '';\n        if (fullKeyCode.indexOf('code.') > -1) {\n            keycode = event.code;\n            key = 'code.';\n        }\n        // the keycode could be unidentified so we have to check here\n        if (keycode == null || !keycode)\n            return false;\n        keycode = keycode.toLowerCase();\n        if (keycode === ' ') {\n            keycode = 'space'; // for readability\n        }\n        else if (keycode === '.') {\n            keycode = 'dot'; // because '.' is used as a separator in event names\n        }\n        MODIFIER_KEYS.forEach(modifierName => {\n            if (modifierName !== keycode) {\n                const modifierGetter = MODIFIER_KEY_GETTERS[modifierName];\n                if (modifierGetter(event)) {\n                    key += modifierName + '.';\n                }\n            }\n        });\n        key += keycode;\n        return key === fullKeyCode;\n    }\n    /**\n     * Configures a handler callback for a key event.\n     * @param fullKey The event name that combines all simultaneous keystrokes.\n     * @param handler The function that responds to the key event.\n     * @param zone The zone in which the event occurred.\n     * @returns A callback function.\n     */\n    static eventCallback(fullKey, handler, zone) {\n        return (event) => {\n            if (KeyEventsPlugin.matchEventFullKeyCode(event, fullKey)) {\n                zone.runGuarded(() => handler(event));\n            }\n        };\n    }\n    /** @internal */\n    static _normalizeKey(keyName) {\n        // TODO: switch to a Map if the mapping grows too much\n        switch (keyName) {\n            case 'esc':\n                return 'escape';\n            default:\n                return keyName;\n        }\n    }\n}\nKeyEventsPlugin.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: KeyEventsPlugin, deps: [{ token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable });\nKeyEventsPlugin.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: KeyEventsPlugin });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: KeyEventsPlugin, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst NG_DEV_MODE = typeof ngDevMode === 'undefined' || !!ngDevMode;\n/**\n * Bootstraps an instance of an Angular application and renders a standalone component as the\n * application's root component. More information about standalone components can be found in [this\n * guide](guide/standalone-components).\n *\n * @usageNotes\n * The root component passed into this function *must* be a standalone one (should have the\n * `standalone: true` flag in the `@Component` decorator config).\n *\n * ```typescript\n * @Component({\n *   standalone: true,\n *   template: 'Hello world!'\n * })\n * class RootComponent {}\n *\n * const appRef: ApplicationRef = await bootstrapApplication(RootComponent);\n * ```\n *\n * You can add the list of providers that should be available in the application injector by\n * specifying the `providers` field in an object passed as the second argument:\n *\n * ```typescript\n * await bootstrapApplication(RootComponent, {\n *   providers: [\n *     {provide: BACKEND_URL, useValue: 'https://yourdomain.com/api'}\n *   ]\n * });\n * ```\n *\n * The `importProvidersFrom` helper method can be used to collect all providers from any\n * existing NgModule (and transitively from all NgModules that it imports):\n *\n * ```typescript\n * await bootstrapApplication(RootComponent, {\n *   providers: [\n *     importProvidersFrom(SomeNgModule)\n *   ]\n * });\n * ```\n *\n * Note: the `bootstrapApplication` method doesn't include [Testability](api/core/Testability) by\n * default. You can add [Testability](api/core/Testability) by getting the list of necessary\n * providers using `provideProtractorTestingSupport()` function and adding them into the `providers`\n * array, for example:\n *\n * ```typescript\n * import {provideProtractorTestingSupport} from '@angular/platform-browser';\n *\n * await bootstrapApplication(RootComponent, {providers: [provideProtractorTestingSupport()]});\n * ```\n *\n * @param rootComponent A reference to a standalone component that should be rendered.\n * @param options Extra configuration for the bootstrap operation, see `ApplicationConfig` for\n *     additional info.\n * @returns A promise that returns an `ApplicationRef` instance once resolved.\n *\n * @publicApi\n * @developerPreview\n */\nfunction bootstrapApplication(rootComponent, options) {\n    return ɵinternalCreateApplication({ rootComponent, ...createProvidersConfig(options) });\n}\n/**\n * Create an instance of an Angular application without bootstrapping any components. This is useful\n * for the situation where one wants to decouple application environment creation (a platform and\n * associated injectors) from rendering components on a screen. Components can be subsequently\n * bootstrapped on the returned `ApplicationRef`.\n *\n * @param options Extra configuration for the application environment, see `ApplicationConfig` for\n *     additional info.\n * @returns A promise that returns an `ApplicationRef` instance once resolved.\n *\n * @publicApi\n * @developerPreview\n */\nfunction createApplication(options) {\n    return ɵinternalCreateApplication(createProvidersConfig(options));\n}\nfunction createProvidersConfig(options) {\n    return {\n        appProviders: [\n            ...BROWSER_MODULE_PROVIDERS,\n            ...(options?.providers ?? []),\n        ],\n        platformProviders: INTERNAL_BROWSER_PLATFORM_PROVIDERS\n    };\n}\n/**\n * Returns a set of providers required to setup [Testability](api/core/Testability) for an\n * application bootstrapped using the `bootstrapApplication` function. The set of providers is\n * needed to support testing an application with Protractor (which relies on the Testability APIs\n * to be present).\n *\n * @returns An array of providers required to setup Testability for an application and make it\n *     available for testing using Protractor.\n *\n * @developerPreview\n * @publicApi\n */\nfunction provideProtractorTestingSupport() {\n    // Return a copy to prevent changes to the original array in case any in-place\n    // alterations are performed to the `provideProtractorTestingSupport` call results in app code.\n    return [...TESTABILITY_PROVIDERS];\n}\nfunction initDomAdapter() {\n    BrowserDomAdapter.makeCurrent();\n}\nfunction errorHandler() {\n    return new ErrorHandler();\n}\nfunction _document() {\n    // Tell ivy about the global document\n    ɵsetDocument(document);\n    return document;\n}\nconst INTERNAL_BROWSER_PLATFORM_PROVIDERS = [\n    { provide: PLATFORM_ID, useValue: ɵPLATFORM_BROWSER_ID },\n    { provide: PLATFORM_INITIALIZER, useValue: initDomAdapter, multi: true },\n    { provide: DOCUMENT, useFactory: _document, deps: [] },\n];\n/**\n * A factory function that returns a `PlatformRef` instance associated with browser service\n * providers.\n *\n * @publicApi\n */\nconst platformBrowser = createPlatformFactory(platformCore, 'browser', INTERNAL_BROWSER_PLATFORM_PROVIDERS);\n/**\n * Internal marker to signal whether providers from the `BrowserModule` are already present in DI.\n * This is needed to avoid loading `BrowserModule` providers twice. We can't rely on the\n * `BrowserModule` presence itself, since the standalone-based bootstrap just imports\n * `BrowserModule` providers without referencing the module itself.\n */\nconst BROWSER_MODULE_PROVIDERS_MARKER = new InjectionToken(NG_DEV_MODE ? 'BrowserModule Providers Marker' : '');\nconst TESTABILITY_PROVIDERS = [\n    {\n        provide: ɵTESTABILITY_GETTER,\n        useClass: BrowserGetTestability,\n        deps: [],\n    },\n    {\n        provide: ɵTESTABILITY,\n        useClass: Testability,\n        deps: [NgZone, TestabilityRegistry, ɵTESTABILITY_GETTER]\n    },\n    {\n        provide: Testability,\n        useClass: Testability,\n        deps: [NgZone, TestabilityRegistry, ɵTESTABILITY_GETTER]\n    }\n];\nconst BROWSER_MODULE_PROVIDERS = [\n    { provide: ɵINJECTOR_SCOPE, useValue: 'root' },\n    { provide: ErrorHandler, useFactory: errorHandler, deps: [] }, {\n        provide: EVENT_MANAGER_PLUGINS,\n        useClass: DomEventsPlugin,\n        multi: true,\n        deps: [DOCUMENT, NgZone, PLATFORM_ID]\n    },\n    { provide: EVENT_MANAGER_PLUGINS, useClass: KeyEventsPlugin, multi: true, deps: [DOCUMENT] }, {\n        provide: DomRendererFactory2,\n        useClass: DomRendererFactory2,\n        deps: [EventManager, DomSharedStylesHost, APP_ID]\n    },\n    { provide: RendererFactory2, useExisting: DomRendererFactory2 },\n    { provide: SharedStylesHost, useExisting: DomSharedStylesHost },\n    { provide: DomSharedStylesHost, useClass: DomSharedStylesHost, deps: [DOCUMENT] },\n    { provide: EventManager, useClass: EventManager, deps: [EVENT_MANAGER_PLUGINS, NgZone] },\n    { provide: XhrFactory, useClass: BrowserXhr, deps: [] },\n    NG_DEV_MODE ? { provide: BROWSER_MODULE_PROVIDERS_MARKER, useValue: true } : []\n];\n/**\n * Exports required infrastructure for all Angular apps.\n * Included by default in all Angular apps created with the CLI\n * `new` command.\n * Re-exports `CommonModule` and `ApplicationModule`, making their\n * exports and providers available to all apps.\n *\n * @publicApi\n */\nclass BrowserModule {\n    constructor(providersAlreadyPresent) {\n        if (NG_DEV_MODE && providersAlreadyPresent) {\n            throw new Error(`Providers from the \\`BrowserModule\\` have already been loaded. If you need access ` +\n                `to common directives such as NgIf and NgFor, import the \\`CommonModule\\` instead.`);\n        }\n    }\n    /**\n     * Configures a browser-based app to transition from a server-rendered app, if\n     * one is present on the page.\n     *\n     * @param params An object containing an identifier for the app to transition.\n     * The ID must match between the client and server versions of the app.\n     * @returns The reconfigured `BrowserModule` to import into the app's root `AppModule`.\n     */\n    static withServerTransition(params) {\n        return {\n            ngModule: BrowserModule,\n            providers: [\n                { provide: APP_ID, useValue: params.appId },\n                { provide: TRANSITION_ID, useExisting: APP_ID },\n                SERVER_TRANSITION_PROVIDERS,\n            ],\n        };\n    }\n}\nBrowserModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: BrowserModule, deps: [{ token: BROWSER_MODULE_PROVIDERS_MARKER, optional: true, skipSelf: true }], target: i0.ɵɵFactoryTarget.NgModule });\nBrowserModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.3.0\", ngImport: i0, type: BrowserModule, exports: [CommonModule, ApplicationModule] });\nBrowserModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: BrowserModule, providers: [\n        ...BROWSER_MODULE_PROVIDERS,\n        ...TESTABILITY_PROVIDERS\n    ], imports: [CommonModule, ApplicationModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: BrowserModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    providers: [\n                        ...BROWSER_MODULE_PROVIDERS,\n                        ...TESTABILITY_PROVIDERS\n                    ],\n                    exports: [CommonModule, ApplicationModule],\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: SkipSelf\n                }, {\n                    type: Inject,\n                    args: [BROWSER_MODULE_PROVIDERS_MARKER]\n                }] }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Factory to create a `Meta` service instance for the current DOM document.\n */\nfunction createMeta() {\n    return new Meta(ɵɵinject(DOCUMENT));\n}\n/**\n * A service for managing HTML `<meta>` tags.\n *\n * Properties of the `MetaDefinition` object match the attributes of the\n * HTML `<meta>` tag. These tags define document metadata that is important for\n * things like configuring a Content Security Policy, defining browser compatibility\n * and security settings, setting HTTP Headers, defining rich content for social sharing,\n * and Search Engine Optimization (SEO).\n *\n * To identify specific `<meta>` tags in a document, use an attribute selection\n * string in the format `\"tag_attribute='value string'\"`.\n * For example, an `attrSelector` value of `\"name='description'\"` matches a tag\n * whose `name` attribute has the value `\"description\"`.\n * Selectors are used with the `querySelector()` Document method,\n * in the format `meta[{attrSelector}]`.\n *\n * @see [HTML meta tag](https://developer.mozilla.org/docs/Web/HTML/Element/meta)\n * @see [Document.querySelector()](https://developer.mozilla.org/docs/Web/API/Document/querySelector)\n *\n *\n * @publicApi\n */\nclass Meta {\n    constructor(_doc) {\n        this._doc = _doc;\n        this._dom = ɵgetDOM();\n    }\n    /**\n     * Retrieves or creates a specific `<meta>` tag element in the current HTML document.\n     * In searching for an existing tag, Angular attempts to match the `name` or `property` attribute\n     * values in the provided tag definition, and verifies that all other attribute values are equal.\n     * If an existing element is found, it is returned and is not modified in any way.\n     * @param tag The definition of a `<meta>` element to match or create.\n     * @param forceCreation True to create a new element without checking whether one already exists.\n     * @returns The existing element with the same attributes and values if found,\n     * the new element if no match is found, or `null` if the tag parameter is not defined.\n     */\n    addTag(tag, forceCreation = false) {\n        if (!tag)\n            return null;\n        return this._getOrCreateElement(tag, forceCreation);\n    }\n    /**\n     * Retrieves or creates a set of `<meta>` tag elements in the current HTML document.\n     * In searching for an existing tag, Angular attempts to match the `name` or `property` attribute\n     * values in the provided tag definition, and verifies that all other attribute values are equal.\n     * @param tags An array of tag definitions to match or create.\n     * @param forceCreation True to create new elements without checking whether they already exist.\n     * @returns The matching elements if found, or the new elements.\n     */\n    addTags(tags, forceCreation = false) {\n        if (!tags)\n            return [];\n        return tags.reduce((result, tag) => {\n            if (tag) {\n                result.push(this._getOrCreateElement(tag, forceCreation));\n            }\n            return result;\n        }, []);\n    }\n    /**\n     * Retrieves a `<meta>` tag element in the current HTML document.\n     * @param attrSelector The tag attribute and value to match against, in the format\n     * `\"tag_attribute='value string'\"`.\n     * @returns The matching element, if any.\n     */\n    getTag(attrSelector) {\n        if (!attrSelector)\n            return null;\n        return this._doc.querySelector(`meta[${attrSelector}]`) || null;\n    }\n    /**\n     * Retrieves a set of `<meta>` tag elements in the current HTML document.\n     * @param attrSelector The tag attribute and value to match against, in the format\n     * `\"tag_attribute='value string'\"`.\n     * @returns The matching elements, if any.\n     */\n    getTags(attrSelector) {\n        if (!attrSelector)\n            return [];\n        const list /*NodeList*/ = this._doc.querySelectorAll(`meta[${attrSelector}]`);\n        return list ? [].slice.call(list) : [];\n    }\n    /**\n     * Modifies an existing `<meta>` tag element in the current HTML document.\n     * @param tag The tag description with which to replace the existing tag content.\n     * @param selector A tag attribute and value to match against, to identify\n     * an existing tag. A string in the format `\"tag_attribute=`value string`\"`.\n     * If not supplied, matches a tag with the same `name` or `property` attribute value as the\n     * replacement tag.\n     * @return The modified element.\n     */\n    updateTag(tag, selector) {\n        if (!tag)\n            return null;\n        selector = selector || this._parseSelector(tag);\n        const meta = this.getTag(selector);\n        if (meta) {\n            return this._setMetaElementAttributes(tag, meta);\n        }\n        return this._getOrCreateElement(tag, true);\n    }\n    /**\n     * Removes an existing `<meta>` tag element from the current HTML document.\n     * @param attrSelector A tag attribute and value to match against, to identify\n     * an existing tag. A string in the format `\"tag_attribute=`value string`\"`.\n     */\n    removeTag(attrSelector) {\n        this.removeTagElement(this.getTag(attrSelector));\n    }\n    /**\n     * Removes an existing `<meta>` tag element from the current HTML document.\n     * @param meta The tag definition to match against to identify an existing tag.\n     */\n    removeTagElement(meta) {\n        if (meta) {\n            this._dom.remove(meta);\n        }\n    }\n    _getOrCreateElement(meta, forceCreation = false) {\n        if (!forceCreation) {\n            const selector = this._parseSelector(meta);\n            // It's allowed to have multiple elements with the same name so it's not enough to\n            // just check that element with the same name already present on the page. We also need to\n            // check if element has tag attributes\n            const elem = this.getTags(selector).filter(elem => this._containsAttributes(meta, elem))[0];\n            if (elem !== undefined)\n                return elem;\n        }\n        const element = this._dom.createElement('meta');\n        this._setMetaElementAttributes(meta, element);\n        const head = this._doc.getElementsByTagName('head')[0];\n        head.appendChild(element);\n        return element;\n    }\n    _setMetaElementAttributes(tag, el) {\n        Object.keys(tag).forEach((prop) => el.setAttribute(this._getMetaKeyMap(prop), tag[prop]));\n        return el;\n    }\n    _parseSelector(tag) {\n        const attr = tag.name ? 'name' : 'property';\n        return `${attr}=\"${tag[attr]}\"`;\n    }\n    _containsAttributes(tag, elem) {\n        return Object.keys(tag).every((key) => elem.getAttribute(this._getMetaKeyMap(key)) === tag[key]);\n    }\n    _getMetaKeyMap(prop) {\n        return META_KEYS_MAP[prop] || prop;\n    }\n}\nMeta.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: Meta, deps: [{ token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable });\nMeta.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: Meta, providedIn: 'root', useFactory: createMeta, deps: [] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: Meta, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root', useFactory: createMeta, deps: [] }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; } });\n/**\n * Mapping for MetaDefinition properties with their correct meta attribute names\n */\nconst META_KEYS_MAP = {\n    httpEquiv: 'http-equiv'\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Factory to create Title service.\n */\nfunction createTitle() {\n    return new Title(ɵɵinject(DOCUMENT));\n}\n/**\n * A service that can be used to get and set the title of a current HTML document.\n *\n * Since an Angular application can't be bootstrapped on the entire HTML document (`<html>` tag)\n * it is not possible to bind to the `text` property of the `HTMLTitleElement` elements\n * (representing the `<title>` tag). Instead, this service can be used to set and get the current\n * title value.\n *\n * @publicApi\n */\nclass Title {\n    constructor(_doc) {\n        this._doc = _doc;\n    }\n    /**\n     * Get the title of the current HTML document.\n     */\n    getTitle() {\n        return this._doc.title;\n    }\n    /**\n     * Set the title of the current HTML document.\n     * @param newTitle\n     */\n    setTitle(newTitle) {\n        this._doc.title = newTitle || '';\n    }\n}\nTitle.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: Title, deps: [{ token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable });\nTitle.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: Title, providedIn: 'root', useFactory: createTitle, deps: [] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: Title, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root', useFactory: createTitle, deps: [] }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst CAMEL_CASE_REGEXP = /([A-Z])/g;\nconst DASH_CASE_REGEXP = /-([a-z])/g;\nfunction camelCaseToDashCase(input) {\n    return input.replace(CAMEL_CASE_REGEXP, (...m) => '-' + m[1].toLowerCase());\n}\nfunction dashCaseToCamelCase(input) {\n    return input.replace(DASH_CASE_REGEXP, (...m) => m[1].toUpperCase());\n}\n/**\n * Exports the value under a given `name` in the global property `ng`. For example `ng.probe` if\n * `name` is `'probe'`.\n * @param name Name under which it will be exported. Keep in mind this will be a property of the\n * global `ng` object.\n * @param value The value to export.\n */\nfunction exportNgVar(name, value) {\n    if (typeof COMPILED === 'undefined' || !COMPILED) {\n        // Note: we can't export `ng` when using closure enhanced optimization as:\n        // - closure declares globals itself for minified names, which sometimes clobber our `ng` global\n        // - we can't declare a closure extern as the namespace `ng` is already used within Google\n        //   for typings for angularJS (via `goog.provide('ng....')`).\n        const ng = ɵglobal['ng'] = ɵglobal['ng'] || {};\n        ng[name] = value;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst win = typeof window !== 'undefined' && window || {};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass ChangeDetectionPerfRecord {\n    constructor(msPerTick, numTicks) {\n        this.msPerTick = msPerTick;\n        this.numTicks = numTicks;\n    }\n}\n/**\n * Entry point for all Angular profiling-related debug tools. This object\n * corresponds to the `ng.profiler` in the dev console.\n */\nclass AngularProfiler {\n    constructor(ref) {\n        this.appRef = ref.injector.get(ApplicationRef);\n    }\n    // tslint:disable:no-console\n    /**\n     * Exercises change detection in a loop and then prints the average amount of\n     * time in milliseconds how long a single round of change detection takes for\n     * the current state of the UI. It runs a minimum of 5 rounds for a minimum\n     * of 500 milliseconds.\n     *\n     * Optionally, a user may pass a `config` parameter containing a map of\n     * options. Supported options are:\n     *\n     * `record` (boolean) - causes the profiler to record a CPU profile while\n     * it exercises the change detector. Example:\n     *\n     * ```\n     * ng.profiler.timeChangeDetection({record: true})\n     * ```\n     */\n    timeChangeDetection(config) {\n        const record = config && config['record'];\n        const profileName = 'Change Detection';\n        // Profiler is not available in Android browsers without dev tools opened\n        const isProfilerAvailable = win.console.profile != null;\n        if (record && isProfilerAvailable) {\n            win.console.profile(profileName);\n        }\n        const start = performanceNow();\n        let numTicks = 0;\n        while (numTicks < 5 || (performanceNow() - start) < 500) {\n            this.appRef.tick();\n            numTicks++;\n        }\n        const end = performanceNow();\n        if (record && isProfilerAvailable) {\n            win.console.profileEnd(profileName);\n        }\n        const msPerTick = (end - start) / numTicks;\n        win.console.log(`ran ${numTicks} change detection cycles`);\n        win.console.log(`${msPerTick.toFixed(2)} ms per check`);\n        return new ChangeDetectionPerfRecord(msPerTick, numTicks);\n    }\n}\nfunction performanceNow() {\n    return win.performance && win.performance.now ? win.performance.now() :\n        new Date().getTime();\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst PROFILER_GLOBAL_NAME = 'profiler';\n/**\n * Enabled Angular debug tools that are accessible via your browser's\n * developer console.\n *\n * Usage:\n *\n * 1. Open developer console (e.g. in Chrome Ctrl + Shift + j)\n * 1. Type `ng.` (usually the console will show auto-complete suggestion)\n * 1. Try the change detection profiler `ng.profiler.timeChangeDetection()`\n *    then hit Enter.\n *\n * @publicApi\n */\nfunction enableDebugTools(ref) {\n    exportNgVar(PROFILER_GLOBAL_NAME, new AngularProfiler(ref));\n    return ref;\n}\n/**\n * Disables Angular tools.\n *\n * @publicApi\n */\nfunction disableDebugTools() {\n    exportNgVar(PROFILER_GLOBAL_NAME, null);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction escapeHtml(text) {\n    const escapedText = {\n        '&': '&a;',\n        '\"': '&q;',\n        '\\'': '&s;',\n        '<': '&l;',\n        '>': '&g;',\n    };\n    return text.replace(/[&\"'<>]/g, s => escapedText[s]);\n}\nfunction unescapeHtml(text) {\n    const unescapedText = {\n        '&a;': '&',\n        '&q;': '\"',\n        '&s;': '\\'',\n        '&l;': '<',\n        '&g;': '>',\n    };\n    return text.replace(/&[^;]+;/g, s => unescapedText[s]);\n}\n/**\n * Create a `StateKey<T>` that can be used to store value of type T with `TransferState`.\n *\n * Example:\n *\n * ```\n * const COUNTER_KEY = makeStateKey<number>('counter');\n * let value = 10;\n *\n * transferState.set(COUNTER_KEY, value);\n * ```\n *\n * @publicApi\n */\nfunction makeStateKey(key) {\n    return key;\n}\n/**\n * A key value store that is transferred from the application on the server side to the application\n * on the client side.\n *\n * The `TransferState` is available as an injectable token.\n * On the client, just inject this token using DI and use it, it will be lazily initialized.\n * On the server it's already included if `renderApplication` function is used. Otherwise, import\n * the `ServerTransferStateModule` module to make the `TransferState` available.\n *\n * The values in the store are serialized/deserialized using JSON.stringify/JSON.parse. So only\n * boolean, number, string, null and non-class objects will be serialized and deserialized in a\n * non-lossy manner.\n *\n * @publicApi\n */\nclass TransferState {\n    constructor() {\n        this.store = {};\n        this.onSerializeCallbacks = {};\n    }\n    /**\n     * Get the value corresponding to a key. Return `defaultValue` if key is not found.\n     */\n    get(key, defaultValue) {\n        return this.store[key] !== undefined ? this.store[key] : defaultValue;\n    }\n    /**\n     * Set the value corresponding to a key.\n     */\n    set(key, value) {\n        this.store[key] = value;\n    }\n    /**\n     * Remove a key from the store.\n     */\n    remove(key) {\n        delete this.store[key];\n    }\n    /**\n     * Test whether a key exists in the store.\n     */\n    hasKey(key) {\n        return this.store.hasOwnProperty(key);\n    }\n    /**\n     * Indicates whether the state is empty.\n     */\n    get isEmpty() {\n        return Object.keys(this.store).length === 0;\n    }\n    /**\n     * Register a callback to provide the value for a key when `toJson` is called.\n     */\n    onSerialize(key, callback) {\n        this.onSerializeCallbacks[key] = callback;\n    }\n    /**\n     * Serialize the current state of the store to JSON.\n     */\n    toJson() {\n        // Call the onSerialize callbacks and put those values into the store.\n        for (const key in this.onSerializeCallbacks) {\n            if (this.onSerializeCallbacks.hasOwnProperty(key)) {\n                try {\n                    this.store[key] = this.onSerializeCallbacks[key]();\n                }\n                catch (e) {\n                    console.warn('Exception in onSerialize callback: ', e);\n                }\n            }\n        }\n        return JSON.stringify(this.store);\n    }\n}\nTransferState.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: TransferState, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nTransferState.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: TransferState, providedIn: 'root', useFactory: () => {\n        const doc = inject(DOCUMENT);\n        const appId = inject(APP_ID);\n        const state = new TransferState();\n        state.store = retrieveTransferredState(doc, appId);\n        return state;\n    } });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: TransferState, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                    useFactory: () => {\n                        const doc = inject(DOCUMENT);\n                        const appId = inject(APP_ID);\n                        const state = new TransferState();\n                        state.store = retrieveTransferredState(doc, appId);\n                        return state;\n                    }\n                }]\n        }] });\nfunction retrieveTransferredState(doc, appId) {\n    // Locate the script tag with the JSON data transferred from the server.\n    // The id of the script tag is set to the Angular appId + 'state'.\n    const script = doc.getElementById(appId + '-state');\n    let initialState = {};\n    if (script && script.textContent) {\n        try {\n            // Avoid using any here as it triggers lint errors in google3 (any is not allowed).\n            initialState = JSON.parse(unescapeHtml(script.textContent));\n        }\n        catch (e) {\n            console.warn('Exception while restoring TransferState for app ' + appId, e);\n        }\n    }\n    return initialState;\n}\n/**\n * NgModule to install on the client side while using the `TransferState` to transfer state from\n * server to client.\n *\n * @publicApi\n * @deprecated no longer needed, you can inject the `TransferState` in an app without providing\n *     this module.\n */\nclass BrowserTransferStateModule {\n}\nBrowserTransferStateModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: BrowserTransferStateModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nBrowserTransferStateModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.3.0\", ngImport: i0, type: BrowserTransferStateModule });\nBrowserTransferStateModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: BrowserTransferStateModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: BrowserTransferStateModule, decorators: [{\n            type: NgModule,\n            args: [{}]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Predicates for use with {@link DebugElement}'s query functions.\n *\n * @publicApi\n */\nclass By {\n    /**\n     * Match all nodes.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example platform-browser/dom/debug/ts/by/by.ts region='by_all'}\n     */\n    static all() {\n        return () => true;\n    }\n    /**\n     * Match elements by the given CSS selector.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example platform-browser/dom/debug/ts/by/by.ts region='by_css'}\n     */\n    static css(selector) {\n        return (debugElement) => {\n            return debugElement.nativeElement != null ?\n                elementMatches(debugElement.nativeElement, selector) :\n                false;\n        };\n    }\n    /**\n     * Match nodes that have the given directive present.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example platform-browser/dom/debug/ts/by/by.ts region='by_directive'}\n     */\n    static directive(type) {\n        return (debugNode) => debugNode.providerTokens.indexOf(type) !== -1;\n    }\n}\nfunction elementMatches(n, selector) {\n    if (ɵgetDOM().isElementNode(n)) {\n        return n.matches && n.matches(selector) ||\n            n.msMatchesSelector && n.msMatchesSelector(selector) ||\n            n.webkitMatchesSelector && n.webkitMatchesSelector(selector);\n    }\n    return false;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Supported HammerJS recognizer event names.\n */\nconst EVENT_NAMES = {\n    // pan\n    'pan': true,\n    'panstart': true,\n    'panmove': true,\n    'panend': true,\n    'pancancel': true,\n    'panleft': true,\n    'panright': true,\n    'panup': true,\n    'pandown': true,\n    // pinch\n    'pinch': true,\n    'pinchstart': true,\n    'pinchmove': true,\n    'pinchend': true,\n    'pinchcancel': true,\n    'pinchin': true,\n    'pinchout': true,\n    // press\n    'press': true,\n    'pressup': true,\n    // rotate\n    'rotate': true,\n    'rotatestart': true,\n    'rotatemove': true,\n    'rotateend': true,\n    'rotatecancel': true,\n    // swipe\n    'swipe': true,\n    'swipeleft': true,\n    'swiperight': true,\n    'swipeup': true,\n    'swipedown': true,\n    // tap\n    'tap': true,\n    'doubletap': true\n};\n/**\n * DI token for providing [HammerJS](https://hammerjs.github.io/) support to Angular.\n * @see `HammerGestureConfig`\n *\n * @ngModule HammerModule\n * @publicApi\n */\nconst HAMMER_GESTURE_CONFIG = new InjectionToken('HammerGestureConfig');\n/**\n * Injection token used to provide a {@link HammerLoader} to Angular.\n *\n * @publicApi\n */\nconst HAMMER_LOADER = new InjectionToken('HammerLoader');\n/**\n * An injectable [HammerJS Manager](https://hammerjs.github.io/api/#hammermanager)\n * for gesture recognition. Configures specific event recognition.\n * @publicApi\n */\nclass HammerGestureConfig {\n    constructor() {\n        /**\n         * A set of supported event names for gestures to be used in Angular.\n         * Angular supports all built-in recognizers, as listed in\n         * [HammerJS documentation](https://hammerjs.github.io/).\n         */\n        this.events = [];\n        /**\n         * Maps gesture event names to a set of configuration options\n         * that specify overrides to the default values for specific properties.\n         *\n         * The key is a supported event name to be configured,\n         * and the options object contains a set of properties, with override values\n         * to be applied to the named recognizer event.\n         * For example, to disable recognition of the rotate event, specify\n         *  `{\"rotate\": {\"enable\": false}}`.\n         *\n         * Properties that are not present take the HammerJS default values.\n         * For information about which properties are supported for which events,\n         * and their allowed and default values, see\n         * [HammerJS documentation](https://hammerjs.github.io/).\n         *\n         */\n        this.overrides = {};\n    }\n    /**\n     * Creates a [HammerJS Manager](https://hammerjs.github.io/api/#hammermanager)\n     * and attaches it to a given HTML element.\n     * @param element The element that will recognize gestures.\n     * @returns A HammerJS event-manager object.\n     */\n    buildHammer(element) {\n        const mc = new Hammer(element, this.options);\n        mc.get('pinch').set({ enable: true });\n        mc.get('rotate').set({ enable: true });\n        for (const eventName in this.overrides) {\n            mc.get(eventName).set(this.overrides[eventName]);\n        }\n        return mc;\n    }\n}\nHammerGestureConfig.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: HammerGestureConfig, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nHammerGestureConfig.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: HammerGestureConfig });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: HammerGestureConfig, decorators: [{\n            type: Injectable\n        }] });\n/**\n * Event plugin that adds Hammer support to an application.\n *\n * @ngModule HammerModule\n */\nclass HammerGesturesPlugin extends EventManagerPlugin {\n    constructor(doc, _config, console, loader) {\n        super(doc);\n        this._config = _config;\n        this.console = console;\n        this.loader = loader;\n        this._loaderPromise = null;\n    }\n    supports(eventName) {\n        if (!EVENT_NAMES.hasOwnProperty(eventName.toLowerCase()) && !this.isCustomEvent(eventName)) {\n            return false;\n        }\n        if (!window.Hammer && !this.loader) {\n            if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                this.console.warn(`The \"${eventName}\" event cannot be bound because Hammer.JS is not ` +\n                    `loaded and no custom loader has been specified.`);\n            }\n            return false;\n        }\n        return true;\n    }\n    addEventListener(element, eventName, handler) {\n        const zone = this.manager.getZone();\n        eventName = eventName.toLowerCase();\n        // If Hammer is not present but a loader is specified, we defer adding the event listener\n        // until Hammer is loaded.\n        if (!window.Hammer && this.loader) {\n            this._loaderPromise = this._loaderPromise || zone.runOutsideAngular(() => this.loader());\n            // This `addEventListener` method returns a function to remove the added listener.\n            // Until Hammer is loaded, the returned function needs to *cancel* the registration rather\n            // than remove anything.\n            let cancelRegistration = false;\n            let deregister = () => {\n                cancelRegistration = true;\n            };\n            zone.runOutsideAngular(() => this._loaderPromise\n                .then(() => {\n                // If Hammer isn't actually loaded when the custom loader resolves, give up.\n                if (!window.Hammer) {\n                    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                        this.console.warn(`The custom HAMMER_LOADER completed, but Hammer.JS is not present.`);\n                    }\n                    deregister = () => { };\n                    return;\n                }\n                if (!cancelRegistration) {\n                    // Now that Hammer is loaded and the listener is being loaded for real,\n                    // the deregistration function changes from canceling registration to\n                    // removal.\n                    deregister = this.addEventListener(element, eventName, handler);\n                }\n            })\n                .catch(() => {\n                if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                    this.console.warn(`The \"${eventName}\" event cannot be bound because the custom ` +\n                        `Hammer.JS loader failed.`);\n                }\n                deregister = () => { };\n            }));\n            // Return a function that *executes* `deregister` (and not `deregister` itself) so that we\n            // can change the behavior of `deregister` once the listener is added. Using a closure in\n            // this way allows us to avoid any additional data structures to track listener removal.\n            return () => {\n                deregister();\n            };\n        }\n        return zone.runOutsideAngular(() => {\n            // Creating the manager bind events, must be done outside of angular\n            const mc = this._config.buildHammer(element);\n            const callback = function (eventObj) {\n                zone.runGuarded(function () {\n                    handler(eventObj);\n                });\n            };\n            mc.on(eventName, callback);\n            return () => {\n                mc.off(eventName, callback);\n                // destroy mc to prevent memory leak\n                if (typeof mc.destroy === 'function') {\n                    mc.destroy();\n                }\n            };\n        });\n    }\n    isCustomEvent(eventName) {\n        return this._config.events.indexOf(eventName) > -1;\n    }\n}\nHammerGesturesPlugin.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: HammerGesturesPlugin, deps: [{ token: DOCUMENT }, { token: HAMMER_GESTURE_CONFIG }, { token: i0.ɵConsole }, { token: HAMMER_LOADER, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nHammerGesturesPlugin.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: HammerGesturesPlugin });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: HammerGesturesPlugin, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: HammerGestureConfig, decorators: [{\n                    type: Inject,\n                    args: [HAMMER_GESTURE_CONFIG]\n                }] }, { type: i0.ɵConsole }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [HAMMER_LOADER]\n                }] }]; } });\n/**\n * Adds support for HammerJS.\n *\n * Import this module at the root of your application so that Angular can work with\n * HammerJS to detect gesture events.\n *\n * Note that applications still need to include the HammerJS script itself. This module\n * simply sets up the coordination layer between HammerJS and Angular's EventManager.\n *\n * @publicApi\n */\nclass HammerModule {\n}\nHammerModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: HammerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nHammerModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.3.0\", ngImport: i0, type: HammerModule });\nHammerModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: HammerModule, providers: [\n        {\n            provide: EVENT_MANAGER_PLUGINS,\n            useClass: HammerGesturesPlugin,\n            multi: true,\n            deps: [DOCUMENT, HAMMER_GESTURE_CONFIG, ɵConsole, [new Optional(), HAMMER_LOADER]]\n        },\n        { provide: HAMMER_GESTURE_CONFIG, useClass: HammerGestureConfig, deps: [] },\n    ] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: HammerModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    providers: [\n                        {\n                            provide: EVENT_MANAGER_PLUGINS,\n                            useClass: HammerGesturesPlugin,\n                            multi: true,\n                            deps: [DOCUMENT, HAMMER_GESTURE_CONFIG, ɵConsole, [new Optional(), HAMMER_LOADER]]\n                        },\n                        { provide: HAMMER_GESTURE_CONFIG, useClass: HammerGestureConfig, deps: [] },\n                    ]\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * DomSanitizer helps preventing Cross Site Scripting Security bugs (XSS) by sanitizing\n * values to be safe to use in the different DOM contexts.\n *\n * For example, when binding a URL in an `<a [href]=\"someValue\">` hyperlink, `someValue` will be\n * sanitized so that an attacker cannot inject e.g. a `javascript:` URL that would execute code on\n * the website.\n *\n * In specific situations, it might be necessary to disable sanitization, for example if the\n * application genuinely needs to produce a `javascript:` style link with a dynamic value in it.\n * Users can bypass security by constructing a value with one of the `bypassSecurityTrust...`\n * methods, and then binding to that value from the template.\n *\n * These situations should be very rare, and extraordinary care must be taken to avoid creating a\n * Cross Site Scripting (XSS) security bug!\n *\n * When using `bypassSecurityTrust...`, make sure to call the method as early as possible and as\n * close as possible to the source of the value, to make it easy to verify no security bug is\n * created by its use.\n *\n * It is not required (and not recommended) to bypass security if the value is safe, e.g. a URL that\n * does not start with a suspicious protocol, or an HTML snippet that does not contain dangerous\n * code. The sanitizer leaves safe values intact.\n *\n * @security Calling any of the `bypassSecurityTrust...` APIs disables Angular's built-in\n * sanitization for the value passed in. Carefully check and audit all values and code paths going\n * into this call. Make sure any user data is appropriately escaped for this security context.\n * For more detail, see the [Security Guide](https://g.co/ng/security).\n *\n * @publicApi\n */\nclass DomSanitizer {\n}\nDomSanitizer.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: DomSanitizer, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nDomSanitizer.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: DomSanitizer, providedIn: 'root', useExisting: i0.forwardRef(function () { return DomSanitizerImpl; }) });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: DomSanitizer, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root', useExisting: forwardRef(() => DomSanitizerImpl) }]\n        }] });\nfunction domSanitizerImplFactory(injector) {\n    return new DomSanitizerImpl(injector.get(DOCUMENT));\n}\nclass DomSanitizerImpl extends DomSanitizer {\n    constructor(_doc) {\n        super();\n        this._doc = _doc;\n    }\n    sanitize(ctx, value) {\n        if (value == null)\n            return null;\n        switch (ctx) {\n            case SecurityContext.NONE:\n                return value;\n            case SecurityContext.HTML:\n                if (ɵallowSanitizationBypassAndThrow(value, \"HTML\" /* BypassType.Html */)) {\n                    return ɵunwrapSafeValue(value);\n                }\n                return ɵ_sanitizeHtml(this._doc, String(value)).toString();\n            case SecurityContext.STYLE:\n                if (ɵallowSanitizationBypassAndThrow(value, \"Style\" /* BypassType.Style */)) {\n                    return ɵunwrapSafeValue(value);\n                }\n                return value;\n            case SecurityContext.SCRIPT:\n                if (ɵallowSanitizationBypassAndThrow(value, \"Script\" /* BypassType.Script */)) {\n                    return ɵunwrapSafeValue(value);\n                }\n                throw new Error('unsafe value used in a script context');\n            case SecurityContext.URL:\n                if (ɵallowSanitizationBypassAndThrow(value, \"URL\" /* BypassType.Url */)) {\n                    return ɵunwrapSafeValue(value);\n                }\n                return ɵ_sanitizeUrl(String(value));\n            case SecurityContext.RESOURCE_URL:\n                if (ɵallowSanitizationBypassAndThrow(value, \"ResourceURL\" /* BypassType.ResourceUrl */)) {\n                    return ɵunwrapSafeValue(value);\n                }\n                throw new Error('unsafe value used in a resource URL context (see https://g.co/ng/security#xss)');\n            default:\n                throw new Error(`Unexpected SecurityContext ${ctx} (see https://g.co/ng/security#xss)`);\n        }\n    }\n    bypassSecurityTrustHtml(value) {\n        return ɵbypassSanitizationTrustHtml(value);\n    }\n    bypassSecurityTrustStyle(value) {\n        return ɵbypassSanitizationTrustStyle(value);\n    }\n    bypassSecurityTrustScript(value) {\n        return ɵbypassSanitizationTrustScript(value);\n    }\n    bypassSecurityTrustUrl(value) {\n        return ɵbypassSanitizationTrustUrl(value);\n    }\n    bypassSecurityTrustResourceUrl(value) {\n        return ɵbypassSanitizationTrustResourceUrl(value);\n    }\n}\nDomSanitizerImpl.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: DomSanitizerImpl, deps: [{ token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable });\nDomSanitizerImpl.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: DomSanitizerImpl, providedIn: 'root', useFactory: domSanitizerImplFactory, deps: [{ token: Injector }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: DomSanitizerImpl, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root', useFactory: domSanitizerImplFactory, deps: [Injector] }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @publicApi\n */\nconst VERSION = new Version('14.3.0');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BrowserModule, BrowserTransferStateModule, By, DomSanitizer, EVENT_MANAGER_PLUGINS, EventManager, HAMMER_GESTURE_CONFIG, HAMMER_LOADER, HammerGestureConfig, HammerModule, Meta, Title, TransferState, VERSION, bootstrapApplication, createApplication, disableDebugTools, enableDebugTools, makeStateKey, platformBrowser, provideProtractorTestingSupport, BrowserDomAdapter as ɵBrowserDomAdapter, BrowserGetTestability as ɵBrowserGetTestability, DomEventsPlugin as ɵDomEventsPlugin, DomRendererFactory2 as ɵDomRendererFactory2, DomSanitizerImpl as ɵDomSanitizerImpl, DomSharedStylesHost as ɵDomSharedStylesHost, HammerGesturesPlugin as ɵHammerGesturesPlugin, INTERNAL_BROWSER_PLATFORM_PROVIDERS as ɵINTERNAL_BROWSER_PLATFORM_PROVIDERS, KeyEventsPlugin as ɵKeyEventsPlugin, NAMESPACE_URIS as ɵNAMESPACE_URIS, SharedStylesHost as ɵSharedStylesHost, TRANSITION_ID as ɵTRANSITION_ID, escapeHtml as ɵescapeHtml, flattenStyles as ɵflattenStyles, initDomAdapter as ɵinitDomAdapter, shimContentAttribute as ɵshimContentAttribute, shimHostAttribute as ɵshimHostAttribute };\n//# sourceMappingURL=platform-browser.mjs.map\n"],"names":["resolveDirectory","exports","rootDirLevel","meta","url","console","error","Error","urlString","rootDirectoryLevel","a","document","createElement","href","pathname","numDirsProcessed","index","length","finalPath","slice","protocol","host","isInteger","Number","val","isFinite","Math","floor","module","__WEBPACK_EXTERNAL_MODULE__890__","__WEBPACK_EXTERNAL_MODULE__849__","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","y","__system_context__","d","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","p","autoPublicPath","GenericBrowserDomAdapter","constructor","super","arguments","this","supportsDOMEvents","BrowserDomAdapter","static","onAndCancel","el","evt","listener","addEventListener","removeEventListener","dispatchEvent","remove","node","parentNode","removeChild","tagName","doc","getDefaultDocument","createHtmlDocument","implementation","createHTMLDocument","isElementNode","nodeType","Node","ELEMENT_NODE","isShadowRoot","DocumentFragment","getGlobalEventTarget","target","window","body","getBaseHref","baseElement","querySelector","getAttribute","urlParsingNode","setAttribute","pathName","charAt","relativePath","resetBaseElement","getUserAgent","navigator","userAgent","getCookie","name","cookie","TRANSITION_ID","InjectionToken","SERVER_TRANSITION_PROVIDERS","provide","APP_INITIALIZER","useFactory","transitionId","injector","ApplicationInitStatus","donePromise","then","dom","styles","querySelectorAll","i","deps","DOCUMENT","Injector","multi","BrowserGetTestability","addToWindow","registry","elem","findInAncestors","testability","findTestabilityInTree","getAllTestabilities","getAllRootElements","callback","testabilities","count","didWork","decrement","didWork_","forEach","whenStable","t","getTestability","parentElement","BrowserXhr","build","XMLHttpRequest","minVersion","version","ngImport","type","decorators","Injectable","EVENT_MANAGER_PLUGINS","EventManager","plugins","_zone","_eventNameToPlugin","Map","manager","_plugins","reverse","element","eventName","handler","_findPluginFor","addGlobalEventListener","getZone","plugin","supports","set","token","ctorParameters","Inject","args","EventManagerPlugin","_doc","SharedStylesHost","_stylesSet","Set","addStyles","additions","style","has","add","onStylesAdded","getAllStyles","Array","from","DomSharedStylesHost","_hostNodes","head","_addStylesToHost","styleNodes","styleEl","textContent","push","appendChild","addHost","hostNode","removeHost","removeStyle","delete","ngOnDestroy","styleNode","NAMESPACE_URIS","COMPONENT_REGEX","NG_DEV_MODE$1","ngDevMode","COMPONENT_VARIABLE","HOST_ATTR","CONTENT_ATTR","shimContentAttribute","componentShortId","replace","shimHostAttribute","flattenStyles","compId","isArray","decoratePreventDefault","eventHandler","event","preventDefault","returnValue","hasLoggedNativeEncapsulationWarning","DomRendererFactory2","eventManager","sharedStylesHost","appId","rendererByCompId","defaultRenderer","DefaultDomRenderer2","createRenderer","encapsulation","ViewEncapsulation","renderer","id","EmulatedEncapsulationDomRenderer2","applyToHost","warn","ShadowDomRenderer","begin","end","APP_ID","data","create","destroyNode","destroy","namespace","createElementNS","createComment","createText","createTextNode","parent","newChild","isTemplateNode","content","insertBefore","refChild","oldChild","selectRootElement","selectorOrNode","preserveContent","nextSibling","namespaceUri","setAttributeNS","removeAttribute","removeAttributeNS","addClass","classList","removeClass","setStyle","flags","RendererStyleFlags2","setProperty","removeProperty","checkNoSyntheticProp","setValue","nodeValue","listen","AT_CHARCODE","charCodeAt","nameKind","component","contentAttr","hostAttr","hostEl","shadowRoot","attachShadow","mode","nodeOrShadowRoot","DomEventsPlugin","MODIFIER_KEYS","_keyMap","MODIFIER_KEY_GETTERS","altKey","ctrlKey","metaKey","shiftKey","KeyEventsPlugin","parseEventName","parsedEvent","outsideHandler","eventCallback","runOutsideAngular","parts","toLowerCase","split","domEventName","shift","_normalizeKey","pop","fullKey","codeIX","indexOf","splice","modifierName","result","fullKeyCode","keycode","code","modifierGetter","zone","matchEventFullKeyCode","runGuarded","keyName","NG_DEV_MODE","bootstrapApplication","rootComponent","options","createProvidersConfig","createApplication","appProviders","BROWSER_MODULE_PROVIDERS","providers","platformProviders","INTERNAL_BROWSER_PLATFORM_PROVIDERS","provideProtractorTestingSupport","TESTABILITY_PROVIDERS","initDomAdapter","makeCurrent","PLATFORM_ID","useValue","PLATFORM_INITIALIZER","platformBrowser","createPlatformFactory","platformCore","BROWSER_MODULE_PROVIDERS_MARKER","useClass","Testability","NgZone","TestabilityRegistry","ErrorHandler","RendererFactory2","useExisting","XhrFactory","BrowserModule","providersAlreadyPresent","params","ngModule","createMeta","Meta","optional","skipSelf","CommonModule","ApplicationModule","imports","NgModule","Optional","SkipSelf","_dom","addTag","tag","forceCreation","_getOrCreateElement","addTags","tags","reduce","getTag","attrSelector","getTags","list","updateTag","selector","_parseSelector","_setMetaElementAttributes","removeTag","removeTagElement","filter","_containsAttributes","getElementsByTagName","keys","_getMetaKeyMap","attr","every","META_KEYS_MAP","providedIn","httpEquiv","createTitle","Title","getTitle","title","setTitle","newTitle","exportNgVar","COMPILED","win","ChangeDetectionPerfRecord","msPerTick","numTicks","AngularProfiler","ref","appRef","ApplicationRef","timeChangeDetection","config","record","profileName","isProfilerAvailable","profile","start","performanceNow","tick","profileEnd","log","toFixed","performance","now","Date","getTime","PROFILER_GLOBAL_NAME","enableDebugTools","disableDebugTools","escapeHtml","text","escapedText","s","makeStateKey","TransferState","store","onSerializeCallbacks","defaultValue","hasKey","isEmpty","onSerialize","toJson","e","JSON","stringify","retrieveTransferredState","script","getElementById","initialState","parse","unescapedText","unescapeHtml","inject","state","BrowserTransferStateModule","By","debugElement","nativeElement","n","matches","msMatchesSelector","webkitMatchesSelector","elementMatches","debugNode","providerTokens","EVENT_NAMES","HAMMER_GESTURE_CONFIG","HAMMER_LOADER","HammerGestureConfig","events","overrides","buildHammer","mc","Hammer","enable","HammerGesturesPlugin","_config","loader","_loaderPromise","isCustomEvent","cancelRegistration","deregister","catch","eventObj","on","off","HammerModule","DomSanitizer","domSanitizerImplFactory","DomSanitizerImpl","forwardRef","sanitize","ctx","SecurityContext","String","toString","bypassSecurityTrustHtml","bypassSecurityTrustStyle","bypassSecurityTrustScript","bypassSecurityTrustUrl","bypassSecurityTrustResourceUrl","VERSION","Version"],"sourceRoot":""}