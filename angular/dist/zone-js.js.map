{"version":3,"file":"zone-js.js","mappings":"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","sources":["webpack://pr_bachelorproefwebshopangular/./node_modules/systemjs-webpack-interop/auto-public-path/auto-public-path.js","webpack://pr_bachelorproefwebshopangular/./node_modules/systemjs-webpack-interop/public-path.js","webpack://pr_bachelorproefwebshopangular/webpack/bootstrap","webpack://pr_bachelorproefwebshopangular/webpack/runtime/__system_context__","webpack://pr_bachelorproefwebshopangular/webpack/runtime/global","webpack://pr_bachelorproefwebshopangular/webpack/runtime/publicPath","webpack://pr_bachelorproefwebshopangular/./node_modules/systemjs-webpack-interop/auto-public-path/1.js","webpack://pr_bachelorproefwebshopangular/./node_modules/zone.js/fesm2015/zone.js"],"sourcesContent":["const resolveDirectory = require(\"../public-path\").resolveDirectory;\n\nexports.autoPublicPath = function autoPublicPath(rootDirLevel) {\n  if (!rootDirLevel) {\n    rootDirLevel = 1;\n  }\n\n  if (typeof __webpack_public_path__ !== \"undefined\") {\n    if (typeof __system_context__ === \"undefined\") {\n      throw Error(\n        \"systemjs-webpack-interop requires webpack@>=5.0.0-beta.15 and output.libraryTarget set to 'system'\"\n      );\n    }\n\n    if (!__system_context__.meta || !__system_context__.meta.url) {\n      console.error(\"__system_context__\", __system_context__);\n      throw Error(\n        \"systemjs-webpack-interop was provided an unknown SystemJS context. Expected context.meta.url, but none was provided\"\n      );\n    }\n\n    __webpack_public_path__ = resolveDirectory(\n      __system_context__.meta.url,\n      rootDirLevel\n    );\n  }\n};\n","exports.setPublicPath = function setPublicPath(\n  systemjsModuleName,\n  rootDirectoryLevel\n) {\n  if (!rootDirectoryLevel) {\n    rootDirectoryLevel = 1;\n  }\n  if (\n    typeof systemjsModuleName !== \"string\" ||\n    systemjsModuleName.trim().length === 0\n  ) {\n    throw Error(\n      \"systemjs-webpack-interop: setPublicPath(systemjsModuleName) must be called with a non-empty string 'systemjsModuleName'\"\n    );\n  }\n\n  if (\n    typeof rootDirectoryLevel !== \"number\" ||\n    rootDirectoryLevel <= 0 ||\n    isNaN(rootDirectoryLevel) ||\n    !isInteger(rootDirectoryLevel)\n  ) {\n    throw Error(\n      \"systemjs-webpack-interop: setPublicPath(systemjsModuleName, rootDirectoryLevel) must be called with a positive integer 'rootDirectoryLevel'\"\n    );\n  }\n\n  var moduleUrl;\n  try {\n    moduleUrl = window.System.resolve(systemjsModuleName);\n    if (!moduleUrl) {\n      throw Error();\n    }\n  } catch (err) {\n    throw Error(\n      \"systemjs-webpack-interop: There is no such module '\" +\n        systemjsModuleName +\n        \"' in the SystemJS registry. Did you misspell the name of your module?\"\n    );\n  }\n\n  __webpack_public_path__ = resolveDirectory(moduleUrl, rootDirectoryLevel);\n};\n\nfunction resolveDirectory(urlString, rootDirectoryLevel) {\n  // Our friend IE11 doesn't support new URL()\n  // https://github.com/single-spa/single-spa/issues/612\n  // https://gist.github.com/jlong/2428561\n\n  var a = document.createElement(\"a\");\n  a.href = urlString;\n\n  var pathname = a.pathname[0] === \"/\" ? a.pathname : \"/\" + a.pathname;\n  var numDirsProcessed = 0,\n    index = pathname.length;\n  while (numDirsProcessed !== rootDirectoryLevel && index >= 0) {\n    var char = pathname[--index];\n    if (char === \"/\") {\n      numDirsProcessed++;\n    }\n  }\n\n  if (numDirsProcessed !== rootDirectoryLevel) {\n    throw Error(\n      \"systemjs-webpack-interop: rootDirectoryLevel (\" +\n        rootDirectoryLevel +\n        \") is greater than the number of directories (\" +\n        numDirsProcessed +\n        \") in the URL path \" +\n        urlString\n    );\n  }\n\n  var finalPath = pathname.slice(0, index + 1);\n\n  return a.protocol + \"//\" + a.host + finalPath;\n}\n\nexports.resolveDirectory = resolveDirectory;\n\n// borrowed from https://github.com/parshap/js-is-integer/blob/master/index.js\nvar isInteger =\n  Number.isInteger ||\n  function isInteger(val) {\n    return typeof val === \"number\" && isFinite(val) && Math.floor(val) === val;\n  };\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","__webpack_require__.y = __system_context__;","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.p = \"./\";","const autoPublicPath = require(\"./auto-public-path\").autoPublicPath;\n\nautoPublicPath(1);\n","'use strict';\n/**\n * @license Angular v14.2.0-next.0\n * (c) 2010-2022 Google LLC. https://angular.io/\n * License: MIT\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n((function (global) {\n    const performance = global['performance'];\n    function mark(name) {\n        performance && performance['mark'] && performance['mark'](name);\n    }\n    function performanceMeasure(name, label) {\n        performance && performance['measure'] && performance['measure'](name, label);\n    }\n    mark('Zone');\n    // Initialize before it's accessed below.\n    // __Zone_symbol_prefix global can be used to override the default zone\n    // symbol prefix with a custom one if needed.\n    const symbolPrefix = global['__Zone_symbol_prefix'] || '__zone_symbol__';\n    function __symbol__(name) {\n        return symbolPrefix + name;\n    }\n    const checkDuplicate = global[__symbol__('forceDuplicateZoneCheck')] === true;\n    if (global['Zone']) {\n        // if global['Zone'] already exists (maybe zone.js was already loaded or\n        // some other lib also registered a global object named Zone), we may need\n        // to throw an error, but sometimes user may not want this error.\n        // For example,\n        // we have two web pages, page1 includes zone.js, page2 doesn't.\n        // and the 1st time user load page1 and page2, everything work fine,\n        // but when user load page2 again, error occurs because global['Zone'] already exists.\n        // so we add a flag to let user choose whether to throw this error or not.\n        // By default, if existing Zone is from zone.js, we will not throw the error.\n        if (checkDuplicate || typeof global['Zone'].__symbol__ !== 'function') {\n            throw new Error('Zone already loaded.');\n        }\n        else {\n            return global['Zone'];\n        }\n    }\n    class Zone {\n        constructor(parent, zoneSpec) {\n            this._parent = parent;\n            this._name = zoneSpec ? zoneSpec.name || 'unnamed' : '<root>';\n            this._properties = zoneSpec && zoneSpec.properties || {};\n            this._zoneDelegate =\n                new _ZoneDelegate(this, this._parent && this._parent._zoneDelegate, zoneSpec);\n        }\n        static assertZonePatched() {\n            if (global['Promise'] !== patches['ZoneAwarePromise']) {\n                throw new Error('Zone.js has detected that ZoneAwarePromise `(window|global).Promise` ' +\n                    'has been overwritten.\\n' +\n                    'Most likely cause is that a Promise polyfill has been loaded ' +\n                    'after Zone.js (Polyfilling Promise api is not necessary when zone.js is loaded. ' +\n                    'If you must load one, do so before loading zone.js.)');\n            }\n        }\n        static get root() {\n            let zone = Zone.current;\n            while (zone.parent) {\n                zone = zone.parent;\n            }\n            return zone;\n        }\n        static get current() {\n            return _currentZoneFrame.zone;\n        }\n        static get currentTask() {\n            return _currentTask;\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        static __load_patch(name, fn, ignoreDuplicate = false) {\n            if (patches.hasOwnProperty(name)) {\n                // `checkDuplicate` option is defined from global variable\n                // so it works for all modules.\n                // `ignoreDuplicate` can work for the specified module\n                if (!ignoreDuplicate && checkDuplicate) {\n                    throw Error('Already loaded patch: ' + name);\n                }\n            }\n            else if (!global['__Zone_disable_' + name]) {\n                const perfName = 'Zone:' + name;\n                mark(perfName);\n                patches[name] = fn(global, Zone, _api);\n                performanceMeasure(perfName, perfName);\n            }\n        }\n        get parent() {\n            return this._parent;\n        }\n        get name() {\n            return this._name;\n        }\n        get(key) {\n            const zone = this.getZoneWith(key);\n            if (zone)\n                return zone._properties[key];\n        }\n        getZoneWith(key) {\n            let current = this;\n            while (current) {\n                if (current._properties.hasOwnProperty(key)) {\n                    return current;\n                }\n                current = current._parent;\n            }\n            return null;\n        }\n        fork(zoneSpec) {\n            if (!zoneSpec)\n                throw new Error('ZoneSpec required!');\n            return this._zoneDelegate.fork(this, zoneSpec);\n        }\n        wrap(callback, source) {\n            if (typeof callback !== 'function') {\n                throw new Error('Expecting function got: ' + callback);\n            }\n            const _callback = this._zoneDelegate.intercept(this, callback, source);\n            const zone = this;\n            return function () {\n                return zone.runGuarded(_callback, this, arguments, source);\n            };\n        }\n        run(callback, applyThis, applyArgs, source) {\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n            }\n            finally {\n                _currentZoneFrame = _currentZoneFrame.parent;\n            }\n        }\n        runGuarded(callback, applyThis = null, applyArgs, source) {\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                try {\n                    return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n                }\n                catch (error) {\n                    if (this._zoneDelegate.handleError(this, error)) {\n                        throw error;\n                    }\n                }\n            }\n            finally {\n                _currentZoneFrame = _currentZoneFrame.parent;\n            }\n        }\n        runTask(task, applyThis, applyArgs) {\n            if (task.zone != this) {\n                throw new Error('A task can only be run in the zone of creation! (Creation: ' +\n                    (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\n            }\n            // https://github.com/angular/zone.js/issues/778, sometimes eventTask\n            // will run in notScheduled(canceled) state, we should not try to\n            // run such kind of task but just return\n            if (task.state === notScheduled && (task.type === eventTask || task.type === macroTask)) {\n                return;\n            }\n            const reEntryGuard = task.state != running;\n            reEntryGuard && task._transitionTo(running, scheduled);\n            task.runCount++;\n            const previousTask = _currentTask;\n            _currentTask = task;\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                if (task.type == macroTask && task.data && !task.data.isPeriodic) {\n                    task.cancelFn = undefined;\n                }\n                try {\n                    return this._zoneDelegate.invokeTask(this, task, applyThis, applyArgs);\n                }\n                catch (error) {\n                    if (this._zoneDelegate.handleError(this, error)) {\n                        throw error;\n                    }\n                }\n            }\n            finally {\n                // if the task's state is notScheduled or unknown, then it has already been cancelled\n                // we should not reset the state to scheduled\n                if (task.state !== notScheduled && task.state !== unknown) {\n                    if (task.type == eventTask || (task.data && task.data.isPeriodic)) {\n                        reEntryGuard && task._transitionTo(scheduled, running);\n                    }\n                    else {\n                        task.runCount = 0;\n                        this._updateTaskCount(task, -1);\n                        reEntryGuard &&\n                            task._transitionTo(notScheduled, running, notScheduled);\n                    }\n                }\n                _currentZoneFrame = _currentZoneFrame.parent;\n                _currentTask = previousTask;\n            }\n        }\n        scheduleTask(task) {\n            if (task.zone && task.zone !== this) {\n                // check if the task was rescheduled, the newZone\n                // should not be the children of the original zone\n                let newZone = this;\n                while (newZone) {\n                    if (newZone === task.zone) {\n                        throw Error(`can not reschedule task to ${this.name} which is descendants of the original zone ${task.zone.name}`);\n                    }\n                    newZone = newZone.parent;\n                }\n            }\n            task._transitionTo(scheduling, notScheduled);\n            const zoneDelegates = [];\n            task._zoneDelegates = zoneDelegates;\n            task._zone = this;\n            try {\n                task = this._zoneDelegate.scheduleTask(this, task);\n            }\n            catch (err) {\n                // should set task's state to unknown when scheduleTask throw error\n                // because the err may from reschedule, so the fromState maybe notScheduled\n                task._transitionTo(unknown, scheduling, notScheduled);\n                // TODO: @JiaLiPassion, should we check the result from handleError?\n                this._zoneDelegate.handleError(this, err);\n                throw err;\n            }\n            if (task._zoneDelegates === zoneDelegates) {\n                // we have to check because internally the delegate can reschedule the task.\n                this._updateTaskCount(task, 1);\n            }\n            if (task.state == scheduling) {\n                task._transitionTo(scheduled, scheduling);\n            }\n            return task;\n        }\n        scheduleMicroTask(source, callback, data, customSchedule) {\n            return this.scheduleTask(new ZoneTask(microTask, source, callback, data, customSchedule, undefined));\n        }\n        scheduleMacroTask(source, callback, data, customSchedule, customCancel) {\n            return this.scheduleTask(new ZoneTask(macroTask, source, callback, data, customSchedule, customCancel));\n        }\n        scheduleEventTask(source, callback, data, customSchedule, customCancel) {\n            return this.scheduleTask(new ZoneTask(eventTask, source, callback, data, customSchedule, customCancel));\n        }\n        cancelTask(task) {\n            if (task.zone != this)\n                throw new Error('A task can only be cancelled in the zone of creation! (Creation: ' +\n                    (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\n            task._transitionTo(canceling, scheduled, running);\n            try {\n                this._zoneDelegate.cancelTask(this, task);\n            }\n            catch (err) {\n                // if error occurs when cancelTask, transit the state to unknown\n                task._transitionTo(unknown, canceling);\n                this._zoneDelegate.handleError(this, err);\n                throw err;\n            }\n            this._updateTaskCount(task, -1);\n            task._transitionTo(notScheduled, canceling);\n            task.runCount = 0;\n            return task;\n        }\n        _updateTaskCount(task, count) {\n            const zoneDelegates = task._zoneDelegates;\n            if (count == -1) {\n                task._zoneDelegates = null;\n            }\n            for (let i = 0; i < zoneDelegates.length; i++) {\n                zoneDelegates[i]._updateTaskCount(task.type, count);\n            }\n        }\n    }\n    // tslint:disable-next-line:require-internal-with-underscore\n    Zone.__symbol__ = __symbol__;\n    const DELEGATE_ZS = {\n        name: '',\n        onHasTask: (delegate, _, target, hasTaskState) => delegate.hasTask(target, hasTaskState),\n        onScheduleTask: (delegate, _, target, task) => delegate.scheduleTask(target, task),\n        onInvokeTask: (delegate, _, target, task, applyThis, applyArgs) => delegate.invokeTask(target, task, applyThis, applyArgs),\n        onCancelTask: (delegate, _, target, task) => delegate.cancelTask(target, task)\n    };\n    class _ZoneDelegate {\n        constructor(zone, parentDelegate, zoneSpec) {\n            this._taskCounts = { 'microTask': 0, 'macroTask': 0, 'eventTask': 0 };\n            this.zone = zone;\n            this._parentDelegate = parentDelegate;\n            this._forkZS = zoneSpec && (zoneSpec && zoneSpec.onFork ? zoneSpec : parentDelegate._forkZS);\n            this._forkDlgt = zoneSpec && (zoneSpec.onFork ? parentDelegate : parentDelegate._forkDlgt);\n            this._forkCurrZone =\n                zoneSpec && (zoneSpec.onFork ? this.zone : parentDelegate._forkCurrZone);\n            this._interceptZS =\n                zoneSpec && (zoneSpec.onIntercept ? zoneSpec : parentDelegate._interceptZS);\n            this._interceptDlgt =\n                zoneSpec && (zoneSpec.onIntercept ? parentDelegate : parentDelegate._interceptDlgt);\n            this._interceptCurrZone =\n                zoneSpec && (zoneSpec.onIntercept ? this.zone : parentDelegate._interceptCurrZone);\n            this._invokeZS = zoneSpec && (zoneSpec.onInvoke ? zoneSpec : parentDelegate._invokeZS);\n            this._invokeDlgt =\n                zoneSpec && (zoneSpec.onInvoke ? parentDelegate : parentDelegate._invokeDlgt);\n            this._invokeCurrZone =\n                zoneSpec && (zoneSpec.onInvoke ? this.zone : parentDelegate._invokeCurrZone);\n            this._handleErrorZS =\n                zoneSpec && (zoneSpec.onHandleError ? zoneSpec : parentDelegate._handleErrorZS);\n            this._handleErrorDlgt =\n                zoneSpec && (zoneSpec.onHandleError ? parentDelegate : parentDelegate._handleErrorDlgt);\n            this._handleErrorCurrZone =\n                zoneSpec && (zoneSpec.onHandleError ? this.zone : parentDelegate._handleErrorCurrZone);\n            this._scheduleTaskZS =\n                zoneSpec && (zoneSpec.onScheduleTask ? zoneSpec : parentDelegate._scheduleTaskZS);\n            this._scheduleTaskDlgt = zoneSpec &&\n                (zoneSpec.onScheduleTask ? parentDelegate : parentDelegate._scheduleTaskDlgt);\n            this._scheduleTaskCurrZone =\n                zoneSpec && (zoneSpec.onScheduleTask ? this.zone : parentDelegate._scheduleTaskCurrZone);\n            this._invokeTaskZS =\n                zoneSpec && (zoneSpec.onInvokeTask ? zoneSpec : parentDelegate._invokeTaskZS);\n            this._invokeTaskDlgt =\n                zoneSpec && (zoneSpec.onInvokeTask ? parentDelegate : parentDelegate._invokeTaskDlgt);\n            this._invokeTaskCurrZone =\n                zoneSpec && (zoneSpec.onInvokeTask ? this.zone : parentDelegate._invokeTaskCurrZone);\n            this._cancelTaskZS =\n                zoneSpec && (zoneSpec.onCancelTask ? zoneSpec : parentDelegate._cancelTaskZS);\n            this._cancelTaskDlgt =\n                zoneSpec && (zoneSpec.onCancelTask ? parentDelegate : parentDelegate._cancelTaskDlgt);\n            this._cancelTaskCurrZone =\n                zoneSpec && (zoneSpec.onCancelTask ? this.zone : parentDelegate._cancelTaskCurrZone);\n            this._hasTaskZS = null;\n            this._hasTaskDlgt = null;\n            this._hasTaskDlgtOwner = null;\n            this._hasTaskCurrZone = null;\n            const zoneSpecHasTask = zoneSpec && zoneSpec.onHasTask;\n            const parentHasTask = parentDelegate && parentDelegate._hasTaskZS;\n            if (zoneSpecHasTask || parentHasTask) {\n                // If we need to report hasTask, than this ZS needs to do ref counting on tasks. In such\n                // a case all task related interceptors must go through this ZD. We can't short circuit it.\n                this._hasTaskZS = zoneSpecHasTask ? zoneSpec : DELEGATE_ZS;\n                this._hasTaskDlgt = parentDelegate;\n                this._hasTaskDlgtOwner = this;\n                this._hasTaskCurrZone = zone;\n                if (!zoneSpec.onScheduleTask) {\n                    this._scheduleTaskZS = DELEGATE_ZS;\n                    this._scheduleTaskDlgt = parentDelegate;\n                    this._scheduleTaskCurrZone = this.zone;\n                }\n                if (!zoneSpec.onInvokeTask) {\n                    this._invokeTaskZS = DELEGATE_ZS;\n                    this._invokeTaskDlgt = parentDelegate;\n                    this._invokeTaskCurrZone = this.zone;\n                }\n                if (!zoneSpec.onCancelTask) {\n                    this._cancelTaskZS = DELEGATE_ZS;\n                    this._cancelTaskDlgt = parentDelegate;\n                    this._cancelTaskCurrZone = this.zone;\n                }\n            }\n        }\n        fork(targetZone, zoneSpec) {\n            return this._forkZS ? this._forkZS.onFork(this._forkDlgt, this.zone, targetZone, zoneSpec) :\n                new Zone(targetZone, zoneSpec);\n        }\n        intercept(targetZone, callback, source) {\n            return this._interceptZS ?\n                this._interceptZS.onIntercept(this._interceptDlgt, this._interceptCurrZone, targetZone, callback, source) :\n                callback;\n        }\n        invoke(targetZone, callback, applyThis, applyArgs, source) {\n            return this._invokeZS ? this._invokeZS.onInvoke(this._invokeDlgt, this._invokeCurrZone, targetZone, callback, applyThis, applyArgs, source) :\n                callback.apply(applyThis, applyArgs);\n        }\n        handleError(targetZone, error) {\n            return this._handleErrorZS ?\n                this._handleErrorZS.onHandleError(this._handleErrorDlgt, this._handleErrorCurrZone, targetZone, error) :\n                true;\n        }\n        scheduleTask(targetZone, task) {\n            let returnTask = task;\n            if (this._scheduleTaskZS) {\n                if (this._hasTaskZS) {\n                    returnTask._zoneDelegates.push(this._hasTaskDlgtOwner);\n                }\n                // clang-format off\n                returnTask = this._scheduleTaskZS.onScheduleTask(this._scheduleTaskDlgt, this._scheduleTaskCurrZone, targetZone, task);\n                // clang-format on\n                if (!returnTask)\n                    returnTask = task;\n            }\n            else {\n                if (task.scheduleFn) {\n                    task.scheduleFn(task);\n                }\n                else if (task.type == microTask) {\n                    scheduleMicroTask(task);\n                }\n                else {\n                    throw new Error('Task is missing scheduleFn.');\n                }\n            }\n            return returnTask;\n        }\n        invokeTask(targetZone, task, applyThis, applyArgs) {\n            return this._invokeTaskZS ? this._invokeTaskZS.onInvokeTask(this._invokeTaskDlgt, this._invokeTaskCurrZone, targetZone, task, applyThis, applyArgs) :\n                task.callback.apply(applyThis, applyArgs);\n        }\n        cancelTask(targetZone, task) {\n            let value;\n            if (this._cancelTaskZS) {\n                value = this._cancelTaskZS.onCancelTask(this._cancelTaskDlgt, this._cancelTaskCurrZone, targetZone, task);\n            }\n            else {\n                if (!task.cancelFn) {\n                    throw Error('Task is not cancelable');\n                }\n                value = task.cancelFn(task);\n            }\n            return value;\n        }\n        hasTask(targetZone, isEmpty) {\n            // hasTask should not throw error so other ZoneDelegate\n            // can still trigger hasTask callback\n            try {\n                this._hasTaskZS &&\n                    this._hasTaskZS.onHasTask(this._hasTaskDlgt, this._hasTaskCurrZone, targetZone, isEmpty);\n            }\n            catch (err) {\n                this.handleError(targetZone, err);\n            }\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        _updateTaskCount(type, count) {\n            const counts = this._taskCounts;\n            const prev = counts[type];\n            const next = counts[type] = prev + count;\n            if (next < 0) {\n                throw new Error('More tasks executed then were scheduled.');\n            }\n            if (prev == 0 || next == 0) {\n                const isEmpty = {\n                    microTask: counts['microTask'] > 0,\n                    macroTask: counts['macroTask'] > 0,\n                    eventTask: counts['eventTask'] > 0,\n                    change: type\n                };\n                this.hasTask(this.zone, isEmpty);\n            }\n        }\n    }\n    class ZoneTask {\n        constructor(type, source, callback, options, scheduleFn, cancelFn) {\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._zone = null;\n            this.runCount = 0;\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._zoneDelegates = null;\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._state = 'notScheduled';\n            this.type = type;\n            this.source = source;\n            this.data = options;\n            this.scheduleFn = scheduleFn;\n            this.cancelFn = cancelFn;\n            if (!callback) {\n                throw new Error('callback is not defined');\n            }\n            this.callback = callback;\n            const self = this;\n            // TODO: @JiaLiPassion options should have interface\n            if (type === eventTask && options && options.useG) {\n                this.invoke = ZoneTask.invokeTask;\n            }\n            else {\n                this.invoke = function () {\n                    return ZoneTask.invokeTask.call(global, self, this, arguments);\n                };\n            }\n        }\n        static invokeTask(task, target, args) {\n            if (!task) {\n                task = this;\n            }\n            _numberOfNestedTaskFrames++;\n            try {\n                task.runCount++;\n                return task.zone.runTask(task, target, args);\n            }\n            finally {\n                if (_numberOfNestedTaskFrames == 1) {\n                    drainMicroTaskQueue();\n                }\n                _numberOfNestedTaskFrames--;\n            }\n        }\n        get zone() {\n            return this._zone;\n        }\n        get state() {\n            return this._state;\n        }\n        cancelScheduleRequest() {\n            this._transitionTo(notScheduled, scheduling);\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        _transitionTo(toState, fromState1, fromState2) {\n            if (this._state === fromState1 || this._state === fromState2) {\n                this._state = toState;\n                if (toState == notScheduled) {\n                    this._zoneDelegates = null;\n                }\n            }\n            else {\n                throw new Error(`${this.type} '${this.source}': can not transition to '${toState}', expecting state '${fromState1}'${fromState2 ? ' or \\'' + fromState2 + '\\'' : ''}, was '${this._state}'.`);\n            }\n        }\n        toString() {\n            if (this.data && typeof this.data.handleId !== 'undefined') {\n                return this.data.handleId.toString();\n            }\n            else {\n                return Object.prototype.toString.call(this);\n            }\n        }\n        // add toJSON method to prevent cyclic error when\n        // call JSON.stringify(zoneTask)\n        toJSON() {\n            return {\n                type: this.type,\n                state: this.state,\n                source: this.source,\n                zone: this.zone.name,\n                runCount: this.runCount\n            };\n        }\n    }\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    ///  MICROTASK QUEUE\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    const symbolSetTimeout = __symbol__('setTimeout');\n    const symbolPromise = __symbol__('Promise');\n    const symbolThen = __symbol__('then');\n    let _microTaskQueue = [];\n    let _isDrainingMicrotaskQueue = false;\n    let nativeMicroTaskQueuePromise;\n    function nativeScheduleMicroTask(func) {\n        if (!nativeMicroTaskQueuePromise) {\n            if (global[symbolPromise]) {\n                nativeMicroTaskQueuePromise = global[symbolPromise].resolve(0);\n            }\n        }\n        if (nativeMicroTaskQueuePromise) {\n            let nativeThen = nativeMicroTaskQueuePromise[symbolThen];\n            if (!nativeThen) {\n                // native Promise is not patchable, we need to use `then` directly\n                // issue 1078\n                nativeThen = nativeMicroTaskQueuePromise['then'];\n            }\n            nativeThen.call(nativeMicroTaskQueuePromise, func);\n        }\n        else {\n            global[symbolSetTimeout](func, 0);\n        }\n    }\n    function scheduleMicroTask(task) {\n        // if we are not running in any task, and there has not been anything scheduled\n        // we must bootstrap the initial task creation by manually scheduling the drain\n        if (_numberOfNestedTaskFrames === 0 && _microTaskQueue.length === 0) {\n            // We are not running in Task, so we need to kickstart the microtask queue.\n            nativeScheduleMicroTask(drainMicroTaskQueue);\n        }\n        task && _microTaskQueue.push(task);\n    }\n    function drainMicroTaskQueue() {\n        if (!_isDrainingMicrotaskQueue) {\n            _isDrainingMicrotaskQueue = true;\n            while (_microTaskQueue.length) {\n                const queue = _microTaskQueue;\n                _microTaskQueue = [];\n                for (let i = 0; i < queue.length; i++) {\n                    const task = queue[i];\n                    try {\n                        task.zone.runTask(task, null, null);\n                    }\n                    catch (error) {\n                        _api.onUnhandledError(error);\n                    }\n                }\n            }\n            _api.microtaskDrainDone();\n            _isDrainingMicrotaskQueue = false;\n        }\n    }\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    ///  BOOTSTRAP\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    const NO_ZONE = { name: 'NO ZONE' };\n    const notScheduled = 'notScheduled', scheduling = 'scheduling', scheduled = 'scheduled', running = 'running', canceling = 'canceling', unknown = 'unknown';\n    const microTask = 'microTask', macroTask = 'macroTask', eventTask = 'eventTask';\n    const patches = {};\n    const _api = {\n        symbol: __symbol__,\n        currentZoneFrame: () => _currentZoneFrame,\n        onUnhandledError: noop,\n        microtaskDrainDone: noop,\n        scheduleMicroTask: scheduleMicroTask,\n        showUncaughtError: () => !Zone[__symbol__('ignoreConsoleErrorUncaughtError')],\n        patchEventTarget: () => [],\n        patchOnProperties: noop,\n        patchMethod: () => noop,\n        bindArguments: () => [],\n        patchThen: () => noop,\n        patchMacroTask: () => noop,\n        patchEventPrototype: () => noop,\n        isIEOrEdge: () => false,\n        getGlobalObjects: () => undefined,\n        ObjectDefineProperty: () => noop,\n        ObjectGetOwnPropertyDescriptor: () => undefined,\n        ObjectCreate: () => undefined,\n        ArraySlice: () => [],\n        patchClass: () => noop,\n        wrapWithCurrentZone: () => noop,\n        filterProperties: () => [],\n        attachOriginToPatched: () => noop,\n        _redefineProperty: () => noop,\n        patchCallbacks: () => noop,\n        nativeScheduleMicroTask: nativeScheduleMicroTask\n    };\n    let _currentZoneFrame = { parent: null, zone: new Zone(null, null) };\n    let _currentTask = null;\n    let _numberOfNestedTaskFrames = 0;\n    function noop() { }\n    performanceMeasure('Zone', 'Zone');\n    return global['Zone'] = Zone;\n}))(typeof window !== 'undefined' && window || typeof self !== 'undefined' && self || global);\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Suppress closure compiler errors about unknown 'Zone' variable\n * @fileoverview\n * @suppress {undefinedVars,globalThis,missingRequire}\n */\n/// <reference types=\"node\"/>\n// issue #989, to reduce bundle size, use short name\n/** Object.getOwnPropertyDescriptor */\nconst ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n/** Object.defineProperty */\nconst ObjectDefineProperty = Object.defineProperty;\n/** Object.getPrototypeOf */\nconst ObjectGetPrototypeOf = Object.getPrototypeOf;\n/** Object.create */\nconst ObjectCreate = Object.create;\n/** Array.prototype.slice */\nconst ArraySlice = Array.prototype.slice;\n/** addEventListener string const */\nconst ADD_EVENT_LISTENER_STR = 'addEventListener';\n/** removeEventListener string const */\nconst REMOVE_EVENT_LISTENER_STR = 'removeEventListener';\n/** zoneSymbol addEventListener */\nconst ZONE_SYMBOL_ADD_EVENT_LISTENER = Zone.__symbol__(ADD_EVENT_LISTENER_STR);\n/** zoneSymbol removeEventListener */\nconst ZONE_SYMBOL_REMOVE_EVENT_LISTENER = Zone.__symbol__(REMOVE_EVENT_LISTENER_STR);\n/** true string const */\nconst TRUE_STR = 'true';\n/** false string const */\nconst FALSE_STR = 'false';\n/** Zone symbol prefix string const. */\nconst ZONE_SYMBOL_PREFIX = Zone.__symbol__('');\nfunction wrapWithCurrentZone(callback, source) {\n    return Zone.current.wrap(callback, source);\n}\nfunction scheduleMacroTaskWithCurrentZone(source, callback, data, customSchedule, customCancel) {\n    return Zone.current.scheduleMacroTask(source, callback, data, customSchedule, customCancel);\n}\nconst zoneSymbol = Zone.__symbol__;\nconst isWindowExists = typeof window !== 'undefined';\nconst internalWindow = isWindowExists ? window : undefined;\nconst _global = isWindowExists && internalWindow || typeof self === 'object' && self || global;\nconst REMOVE_ATTRIBUTE = 'removeAttribute';\nfunction bindArguments(args, source) {\n    for (let i = args.length - 1; i >= 0; i--) {\n        if (typeof args[i] === 'function') {\n            args[i] = wrapWithCurrentZone(args[i], source + '_' + i);\n        }\n    }\n    return args;\n}\nfunction patchPrototype(prototype, fnNames) {\n    const source = prototype.constructor['name'];\n    for (let i = 0; i < fnNames.length; i++) {\n        const name = fnNames[i];\n        const delegate = prototype[name];\n        if (delegate) {\n            const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, name);\n            if (!isPropertyWritable(prototypeDesc)) {\n                continue;\n            }\n            prototype[name] = ((delegate) => {\n                const patched = function () {\n                    return delegate.apply(this, bindArguments(arguments, source + '.' + name));\n                };\n                attachOriginToPatched(patched, delegate);\n                return patched;\n            })(delegate);\n        }\n    }\n}\nfunction isPropertyWritable(propertyDesc) {\n    if (!propertyDesc) {\n        return true;\n    }\n    if (propertyDesc.writable === false) {\n        return false;\n    }\n    return !(typeof propertyDesc.get === 'function' && typeof propertyDesc.set === 'undefined');\n}\nconst isWebWorker = (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope);\n// Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n// this code.\nconst isNode = (!('nw' in _global) && typeof _global.process !== 'undefined' &&\n    {}.toString.call(_global.process) === '[object process]');\nconst isBrowser = !isNode && !isWebWorker && !!(isWindowExists && internalWindow['HTMLElement']);\n// we are in electron of nw, so we are both browser and nodejs\n// Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n// this code.\nconst isMix = typeof _global.process !== 'undefined' &&\n    {}.toString.call(_global.process) === '[object process]' && !isWebWorker &&\n    !!(isWindowExists && internalWindow['HTMLElement']);\nconst zoneSymbolEventNames$1 = {};\nconst wrapFn = function (event) {\n    // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n    // event will be undefined, so we need to use window.event\n    event = event || _global.event;\n    if (!event) {\n        return;\n    }\n    let eventNameSymbol = zoneSymbolEventNames$1[event.type];\n    if (!eventNameSymbol) {\n        eventNameSymbol = zoneSymbolEventNames$1[event.type] = zoneSymbol('ON_PROPERTY' + event.type);\n    }\n    const target = this || event.target || _global;\n    const listener = target[eventNameSymbol];\n    let result;\n    if (isBrowser && target === internalWindow && event.type === 'error') {\n        // window.onerror have different signature\n        // https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onerror#window.onerror\n        // and onerror callback will prevent default when callback return true\n        const errorEvent = event;\n        result = listener &&\n            listener.call(this, errorEvent.message, errorEvent.filename, errorEvent.lineno, errorEvent.colno, errorEvent.error);\n        if (result === true) {\n            event.preventDefault();\n        }\n    }\n    else {\n        result = listener && listener.apply(this, arguments);\n        if (result != undefined && !result) {\n            event.preventDefault();\n        }\n    }\n    return result;\n};\nfunction patchProperty(obj, prop, prototype) {\n    let desc = ObjectGetOwnPropertyDescriptor(obj, prop);\n    if (!desc && prototype) {\n        // when patch window object, use prototype to check prop exist or not\n        const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, prop);\n        if (prototypeDesc) {\n            desc = { enumerable: true, configurable: true };\n        }\n    }\n    // if the descriptor not exists or is not configurable\n    // just return\n    if (!desc || !desc.configurable) {\n        return;\n    }\n    const onPropPatchedSymbol = zoneSymbol('on' + prop + 'patched');\n    if (obj.hasOwnProperty(onPropPatchedSymbol) && obj[onPropPatchedSymbol]) {\n        return;\n    }\n    // A property descriptor cannot have getter/setter and be writable\n    // deleting the writable and value properties avoids this error:\n    //\n    // TypeError: property descriptors must not specify a value or be writable when a\n    // getter or setter has been specified\n    delete desc.writable;\n    delete desc.value;\n    const originalDescGet = desc.get;\n    const originalDescSet = desc.set;\n    // slice(2) cuz 'onclick' -> 'click', etc\n    const eventName = prop.slice(2);\n    let eventNameSymbol = zoneSymbolEventNames$1[eventName];\n    if (!eventNameSymbol) {\n        eventNameSymbol = zoneSymbolEventNames$1[eventName] = zoneSymbol('ON_PROPERTY' + eventName);\n    }\n    desc.set = function (newValue) {\n        // in some of windows's onproperty callback, this is undefined\n        // so we need to check it\n        let target = this;\n        if (!target && obj === _global) {\n            target = _global;\n        }\n        if (!target) {\n            return;\n        }\n        const previousValue = target[eventNameSymbol];\n        if (typeof previousValue === 'function') {\n            target.removeEventListener(eventName, wrapFn);\n        }\n        // issue #978, when onload handler was added before loading zone.js\n        // we should remove it with originalDescSet\n        originalDescSet && originalDescSet.call(target, null);\n        target[eventNameSymbol] = newValue;\n        if (typeof newValue === 'function') {\n            target.addEventListener(eventName, wrapFn, false);\n        }\n    };\n    // The getter would return undefined for unassigned properties but the default value of an\n    // unassigned property is null\n    desc.get = function () {\n        // in some of windows's onproperty callback, this is undefined\n        // so we need to check it\n        let target = this;\n        if (!target && obj === _global) {\n            target = _global;\n        }\n        if (!target) {\n            return null;\n        }\n        const listener = target[eventNameSymbol];\n        if (listener) {\n            return listener;\n        }\n        else if (originalDescGet) {\n            // result will be null when use inline event attribute,\n            // such as <button onclick=\"func();\">OK</button>\n            // because the onclick function is internal raw uncompiled handler\n            // the onclick will be evaluated when first time event was triggered or\n            // the property is accessed, https://github.com/angular/zone.js/issues/525\n            // so we should use original native get to retrieve the handler\n            let value = originalDescGet.call(this);\n            if (value) {\n                desc.set.call(this, value);\n                if (typeof target[REMOVE_ATTRIBUTE] === 'function') {\n                    target.removeAttribute(prop);\n                }\n                return value;\n            }\n        }\n        return null;\n    };\n    ObjectDefineProperty(obj, prop, desc);\n    obj[onPropPatchedSymbol] = true;\n}\nfunction patchOnProperties(obj, properties, prototype) {\n    if (properties) {\n        for (let i = 0; i < properties.length; i++) {\n            patchProperty(obj, 'on' + properties[i], prototype);\n        }\n    }\n    else {\n        const onProperties = [];\n        for (const prop in obj) {\n            if (prop.slice(0, 2) == 'on') {\n                onProperties.push(prop);\n            }\n        }\n        for (let j = 0; j < onProperties.length; j++) {\n            patchProperty(obj, onProperties[j], prototype);\n        }\n    }\n}\nconst originalInstanceKey = zoneSymbol('originalInstance');\n// wrap some native API on `window`\nfunction patchClass(className) {\n    const OriginalClass = _global[className];\n    if (!OriginalClass)\n        return;\n    // keep original class in global\n    _global[zoneSymbol(className)] = OriginalClass;\n    _global[className] = function () {\n        const a = bindArguments(arguments, className);\n        switch (a.length) {\n            case 0:\n                this[originalInstanceKey] = new OriginalClass();\n                break;\n            case 1:\n                this[originalInstanceKey] = new OriginalClass(a[0]);\n                break;\n            case 2:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1]);\n                break;\n            case 3:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2]);\n                break;\n            case 4:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2], a[3]);\n                break;\n            default:\n                throw new Error('Arg list too long.');\n        }\n    };\n    // attach original delegate to patched function\n    attachOriginToPatched(_global[className], OriginalClass);\n    const instance = new OriginalClass(function () { });\n    let prop;\n    for (prop in instance) {\n        // https://bugs.webkit.org/show_bug.cgi?id=44721\n        if (className === 'XMLHttpRequest' && prop === 'responseBlob')\n            continue;\n        (function (prop) {\n            if (typeof instance[prop] === 'function') {\n                _global[className].prototype[prop] = function () {\n                    return this[originalInstanceKey][prop].apply(this[originalInstanceKey], arguments);\n                };\n            }\n            else {\n                ObjectDefineProperty(_global[className].prototype, prop, {\n                    set: function (fn) {\n                        if (typeof fn === 'function') {\n                            this[originalInstanceKey][prop] = wrapWithCurrentZone(fn, className + '.' + prop);\n                            // keep callback in wrapped function so we can\n                            // use it in Function.prototype.toString to return\n                            // the native one.\n                            attachOriginToPatched(this[originalInstanceKey][prop], fn);\n                        }\n                        else {\n                            this[originalInstanceKey][prop] = fn;\n                        }\n                    },\n                    get: function () {\n                        return this[originalInstanceKey][prop];\n                    }\n                });\n            }\n        }(prop));\n    }\n    for (prop in OriginalClass) {\n        if (prop !== 'prototype' && OriginalClass.hasOwnProperty(prop)) {\n            _global[className][prop] = OriginalClass[prop];\n        }\n    }\n}\nfunction patchMethod(target, name, patchFn) {\n    let proto = target;\n    while (proto && !proto.hasOwnProperty(name)) {\n        proto = ObjectGetPrototypeOf(proto);\n    }\n    if (!proto && target[name]) {\n        // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n        proto = target;\n    }\n    const delegateName = zoneSymbol(name);\n    let delegate = null;\n    if (proto && (!(delegate = proto[delegateName]) || !proto.hasOwnProperty(delegateName))) {\n        delegate = proto[delegateName] = proto[name];\n        // check whether proto[name] is writable\n        // some property is readonly in safari, such as HtmlCanvasElement.prototype.toBlob\n        const desc = proto && ObjectGetOwnPropertyDescriptor(proto, name);\n        if (isPropertyWritable(desc)) {\n            const patchDelegate = patchFn(delegate, delegateName, name);\n            proto[name] = function () {\n                return patchDelegate(this, arguments);\n            };\n            attachOriginToPatched(proto[name], delegate);\n        }\n    }\n    return delegate;\n}\n// TODO: @JiaLiPassion, support cancel task later if necessary\nfunction patchMacroTask(obj, funcName, metaCreator) {\n    let setNative = null;\n    function scheduleTask(task) {\n        const data = task.data;\n        data.args[data.cbIdx] = function () {\n            task.invoke.apply(this, arguments);\n        };\n        setNative.apply(data.target, data.args);\n        return task;\n    }\n    setNative = patchMethod(obj, funcName, (delegate) => function (self, args) {\n        const meta = metaCreator(self, args);\n        if (meta.cbIdx >= 0 && typeof args[meta.cbIdx] === 'function') {\n            return scheduleMacroTaskWithCurrentZone(meta.name, args[meta.cbIdx], meta, scheduleTask);\n        }\n        else {\n            // cause an error by calling it directly.\n            return delegate.apply(self, args);\n        }\n    });\n}\nfunction attachOriginToPatched(patched, original) {\n    patched[zoneSymbol('OriginalDelegate')] = original;\n}\nlet isDetectedIEOrEdge = false;\nlet ieOrEdge = false;\nfunction isIE() {\n    try {\n        const ua = internalWindow.navigator.userAgent;\n        if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1) {\n            return true;\n        }\n    }\n    catch (error) {\n    }\n    return false;\n}\nfunction isIEOrEdge() {\n    if (isDetectedIEOrEdge) {\n        return ieOrEdge;\n    }\n    isDetectedIEOrEdge = true;\n    try {\n        const ua = internalWindow.navigator.userAgent;\n        if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1 || ua.indexOf('Edge/') !== -1) {\n            ieOrEdge = true;\n        }\n    }\n    catch (error) {\n    }\n    return ieOrEdge;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nZone.__load_patch('ZoneAwarePromise', (global, Zone, api) => {\n    const ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n    const ObjectDefineProperty = Object.defineProperty;\n    function readableObjectToString(obj) {\n        if (obj && obj.toString === Object.prototype.toString) {\n            const className = obj.constructor && obj.constructor.name;\n            return (className ? className : '') + ': ' + JSON.stringify(obj);\n        }\n        return obj ? obj.toString() : Object.prototype.toString.call(obj);\n    }\n    const __symbol__ = api.symbol;\n    const _uncaughtPromiseErrors = [];\n    const isDisableWrappingUncaughtPromiseRejection = global[__symbol__('DISABLE_WRAPPING_UNCAUGHT_PROMISE_REJECTION')] === true;\n    const symbolPromise = __symbol__('Promise');\n    const symbolThen = __symbol__('then');\n    const creationTrace = '__creationTrace__';\n    api.onUnhandledError = (e) => {\n        if (api.showUncaughtError()) {\n            const rejection = e && e.rejection;\n            if (rejection) {\n                console.error('Unhandled Promise rejection:', rejection instanceof Error ? rejection.message : rejection, '; Zone:', e.zone.name, '; Task:', e.task && e.task.source, '; Value:', rejection, rejection instanceof Error ? rejection.stack : undefined);\n            }\n            else {\n                console.error(e);\n            }\n        }\n    };\n    api.microtaskDrainDone = () => {\n        while (_uncaughtPromiseErrors.length) {\n            const uncaughtPromiseError = _uncaughtPromiseErrors.shift();\n            try {\n                uncaughtPromiseError.zone.runGuarded(() => {\n                    if (uncaughtPromiseError.throwOriginal) {\n                        throw uncaughtPromiseError.rejection;\n                    }\n                    throw uncaughtPromiseError;\n                });\n            }\n            catch (error) {\n                handleUnhandledRejection(error);\n            }\n        }\n    };\n    const UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL = __symbol__('unhandledPromiseRejectionHandler');\n    function handleUnhandledRejection(e) {\n        api.onUnhandledError(e);\n        try {\n            const handler = Zone[UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL];\n            if (typeof handler === 'function') {\n                handler.call(this, e);\n            }\n        }\n        catch (err) {\n        }\n    }\n    function isThenable(value) {\n        return value && value.then;\n    }\n    function forwardResolution(value) {\n        return value;\n    }\n    function forwardRejection(rejection) {\n        return ZoneAwarePromise.reject(rejection);\n    }\n    const symbolState = __symbol__('state');\n    const symbolValue = __symbol__('value');\n    const symbolFinally = __symbol__('finally');\n    const symbolParentPromiseValue = __symbol__('parentPromiseValue');\n    const symbolParentPromiseState = __symbol__('parentPromiseState');\n    const source = 'Promise.then';\n    const UNRESOLVED = null;\n    const RESOLVED = true;\n    const REJECTED = false;\n    const REJECTED_NO_CATCH = 0;\n    function makeResolver(promise, state) {\n        return (v) => {\n            try {\n                resolvePromise(promise, state, v);\n            }\n            catch (err) {\n                resolvePromise(promise, false, err);\n            }\n            // Do not return value or you will break the Promise spec.\n        };\n    }\n    const once = function () {\n        let wasCalled = false;\n        return function wrapper(wrappedFunction) {\n            return function () {\n                if (wasCalled) {\n                    return;\n                }\n                wasCalled = true;\n                wrappedFunction.apply(null, arguments);\n            };\n        };\n    };\n    const TYPE_ERROR = 'Promise resolved with itself';\n    const CURRENT_TASK_TRACE_SYMBOL = __symbol__('currentTaskTrace');\n    // Promise Resolution\n    function resolvePromise(promise, state, value) {\n        const onceWrapper = once();\n        if (promise === value) {\n            throw new TypeError(TYPE_ERROR);\n        }\n        if (promise[symbolState] === UNRESOLVED) {\n            // should only get value.then once based on promise spec.\n            let then = null;\n            try {\n                if (typeof value === 'object' || typeof value === 'function') {\n                    then = value && value.then;\n                }\n            }\n            catch (err) {\n                onceWrapper(() => {\n                    resolvePromise(promise, false, err);\n                })();\n                return promise;\n            }\n            // if (value instanceof ZoneAwarePromise) {\n            if (state !== REJECTED && value instanceof ZoneAwarePromise &&\n                value.hasOwnProperty(symbolState) && value.hasOwnProperty(symbolValue) &&\n                value[symbolState] !== UNRESOLVED) {\n                clearRejectedNoCatch(value);\n                resolvePromise(promise, value[symbolState], value[symbolValue]);\n            }\n            else if (state !== REJECTED && typeof then === 'function') {\n                try {\n                    then.call(value, onceWrapper(makeResolver(promise, state)), onceWrapper(makeResolver(promise, false)));\n                }\n                catch (err) {\n                    onceWrapper(() => {\n                        resolvePromise(promise, false, err);\n                    })();\n                }\n            }\n            else {\n                promise[symbolState] = state;\n                const queue = promise[symbolValue];\n                promise[symbolValue] = value;\n                if (promise[symbolFinally] === symbolFinally) {\n                    // the promise is generated by Promise.prototype.finally\n                    if (state === RESOLVED) {\n                        // the state is resolved, should ignore the value\n                        // and use parent promise value\n                        promise[symbolState] = promise[symbolParentPromiseState];\n                        promise[symbolValue] = promise[symbolParentPromiseValue];\n                    }\n                }\n                // record task information in value when error occurs, so we can\n                // do some additional work such as render longStackTrace\n                if (state === REJECTED && value instanceof Error) {\n                    // check if longStackTraceZone is here\n                    const trace = Zone.currentTask && Zone.currentTask.data &&\n                        Zone.currentTask.data[creationTrace];\n                    if (trace) {\n                        // only keep the long stack trace into error when in longStackTraceZone\n                        ObjectDefineProperty(value, CURRENT_TASK_TRACE_SYMBOL, { configurable: true, enumerable: false, writable: true, value: trace });\n                    }\n                }\n                for (let i = 0; i < queue.length;) {\n                    scheduleResolveOrReject(promise, queue[i++], queue[i++], queue[i++], queue[i++]);\n                }\n                if (queue.length == 0 && state == REJECTED) {\n                    promise[symbolState] = REJECTED_NO_CATCH;\n                    let uncaughtPromiseError = value;\n                    try {\n                        // Here we throws a new Error to print more readable error log\n                        // and if the value is not an error, zone.js builds an `Error`\n                        // Object here to attach the stack information.\n                        throw new Error('Uncaught (in promise): ' + readableObjectToString(value) +\n                            (value && value.stack ? '\\n' + value.stack : ''));\n                    }\n                    catch (err) {\n                        uncaughtPromiseError = err;\n                    }\n                    if (isDisableWrappingUncaughtPromiseRejection) {\n                        // If disable wrapping uncaught promise reject\n                        // use the value instead of wrapping it.\n                        uncaughtPromiseError.throwOriginal = true;\n                    }\n                    uncaughtPromiseError.rejection = value;\n                    uncaughtPromiseError.promise = promise;\n                    uncaughtPromiseError.zone = Zone.current;\n                    uncaughtPromiseError.task = Zone.currentTask;\n                    _uncaughtPromiseErrors.push(uncaughtPromiseError);\n                    api.scheduleMicroTask(); // to make sure that it is running\n                }\n            }\n        }\n        // Resolving an already resolved promise is a noop.\n        return promise;\n    }\n    const REJECTION_HANDLED_HANDLER = __symbol__('rejectionHandledHandler');\n    function clearRejectedNoCatch(promise) {\n        if (promise[symbolState] === REJECTED_NO_CATCH) {\n            // if the promise is rejected no catch status\n            // and queue.length > 0, means there is a error handler\n            // here to handle the rejected promise, we should trigger\n            // windows.rejectionhandled eventHandler or nodejs rejectionHandled\n            // eventHandler\n            try {\n                const handler = Zone[REJECTION_HANDLED_HANDLER];\n                if (handler && typeof handler === 'function') {\n                    handler.call(this, { rejection: promise[symbolValue], promise: promise });\n                }\n            }\n            catch (err) {\n            }\n            promise[symbolState] = REJECTED;\n            for (let i = 0; i < _uncaughtPromiseErrors.length; i++) {\n                if (promise === _uncaughtPromiseErrors[i].promise) {\n                    _uncaughtPromiseErrors.splice(i, 1);\n                }\n            }\n        }\n    }\n    function scheduleResolveOrReject(promise, zone, chainPromise, onFulfilled, onRejected) {\n        clearRejectedNoCatch(promise);\n        const promiseState = promise[symbolState];\n        const delegate = promiseState ?\n            (typeof onFulfilled === 'function') ? onFulfilled : forwardResolution :\n            (typeof onRejected === 'function') ? onRejected :\n                forwardRejection;\n        zone.scheduleMicroTask(source, () => {\n            try {\n                const parentPromiseValue = promise[symbolValue];\n                const isFinallyPromise = !!chainPromise && symbolFinally === chainPromise[symbolFinally];\n                if (isFinallyPromise) {\n                    // if the promise is generated from finally call, keep parent promise's state and value\n                    chainPromise[symbolParentPromiseValue] = parentPromiseValue;\n                    chainPromise[symbolParentPromiseState] = promiseState;\n                }\n                // should not pass value to finally callback\n                const value = zone.run(delegate, undefined, isFinallyPromise && delegate !== forwardRejection && delegate !== forwardResolution ?\n                    [] :\n                    [parentPromiseValue]);\n                resolvePromise(chainPromise, true, value);\n            }\n            catch (error) {\n                // if error occurs, should always return this error\n                resolvePromise(chainPromise, false, error);\n            }\n        }, chainPromise);\n    }\n    const ZONE_AWARE_PROMISE_TO_STRING = 'function ZoneAwarePromise() { [native code] }';\n    const noop = function () { };\n    const AggregateError = global.AggregateError;\n    class ZoneAwarePromise {\n        static toString() {\n            return ZONE_AWARE_PROMISE_TO_STRING;\n        }\n        static resolve(value) {\n            return resolvePromise(new this(null), RESOLVED, value);\n        }\n        static reject(error) {\n            return resolvePromise(new this(null), REJECTED, error);\n        }\n        static any(values) {\n            if (!values || typeof values[Symbol.iterator] !== 'function') {\n                return Promise.reject(new AggregateError([], 'All promises were rejected'));\n            }\n            const promises = [];\n            let count = 0;\n            try {\n                for (let v of values) {\n                    count++;\n                    promises.push(ZoneAwarePromise.resolve(v));\n                }\n            }\n            catch (err) {\n                return Promise.reject(new AggregateError([], 'All promises were rejected'));\n            }\n            if (count === 0) {\n                return Promise.reject(new AggregateError([], 'All promises were rejected'));\n            }\n            let finished = false;\n            const errors = [];\n            return new ZoneAwarePromise((resolve, reject) => {\n                for (let i = 0; i < promises.length; i++) {\n                    promises[i].then(v => {\n                        if (finished) {\n                            return;\n                        }\n                        finished = true;\n                        resolve(v);\n                    }, err => {\n                        errors.push(err);\n                        count--;\n                        if (count === 0) {\n                            finished = true;\n                            reject(new AggregateError(errors, 'All promises were rejected'));\n                        }\n                    });\n                }\n            });\n        }\n        ;\n        static race(values) {\n            let resolve;\n            let reject;\n            let promise = new this((res, rej) => {\n                resolve = res;\n                reject = rej;\n            });\n            function onResolve(value) {\n                resolve(value);\n            }\n            function onReject(error) {\n                reject(error);\n            }\n            for (let value of values) {\n                if (!isThenable(value)) {\n                    value = this.resolve(value);\n                }\n                value.then(onResolve, onReject);\n            }\n            return promise;\n        }\n        static all(values) {\n            return ZoneAwarePromise.allWithCallback(values);\n        }\n        static allSettled(values) {\n            const P = this && this.prototype instanceof ZoneAwarePromise ? this : ZoneAwarePromise;\n            return P.allWithCallback(values, {\n                thenCallback: (value) => ({ status: 'fulfilled', value }),\n                errorCallback: (err) => ({ status: 'rejected', reason: err })\n            });\n        }\n        static allWithCallback(values, callback) {\n            let resolve;\n            let reject;\n            let promise = new this((res, rej) => {\n                resolve = res;\n                reject = rej;\n            });\n            // Start at 2 to prevent prematurely resolving if .then is called immediately.\n            let unresolvedCount = 2;\n            let valueIndex = 0;\n            const resolvedValues = [];\n            for (let value of values) {\n                if (!isThenable(value)) {\n                    value = this.resolve(value);\n                }\n                const curValueIndex = valueIndex;\n                try {\n                    value.then((value) => {\n                        resolvedValues[curValueIndex] = callback ? callback.thenCallback(value) : value;\n                        unresolvedCount--;\n                        if (unresolvedCount === 0) {\n                            resolve(resolvedValues);\n                        }\n                    }, (err) => {\n                        if (!callback) {\n                            reject(err);\n                        }\n                        else {\n                            resolvedValues[curValueIndex] = callback.errorCallback(err);\n                            unresolvedCount--;\n                            if (unresolvedCount === 0) {\n                                resolve(resolvedValues);\n                            }\n                        }\n                    });\n                }\n                catch (thenErr) {\n                    reject(thenErr);\n                }\n                unresolvedCount++;\n                valueIndex++;\n            }\n            // Make the unresolvedCount zero-based again.\n            unresolvedCount -= 2;\n            if (unresolvedCount === 0) {\n                resolve(resolvedValues);\n            }\n            return promise;\n        }\n        constructor(executor) {\n            const promise = this;\n            if (!(promise instanceof ZoneAwarePromise)) {\n                throw new Error('Must be an instanceof Promise.');\n            }\n            promise[symbolState] = UNRESOLVED;\n            promise[symbolValue] = []; // queue;\n            try {\n                const onceWrapper = once();\n                executor &&\n                    executor(onceWrapper(makeResolver(promise, RESOLVED)), onceWrapper(makeResolver(promise, REJECTED)));\n            }\n            catch (error) {\n                resolvePromise(promise, false, error);\n            }\n        }\n        get [Symbol.toStringTag]() {\n            return 'Promise';\n        }\n        get [Symbol.species]() {\n            return ZoneAwarePromise;\n        }\n        then(onFulfilled, onRejected) {\n            var _a;\n            // We must read `Symbol.species` safely because `this` may be anything. For instance, `this`\n            // may be an object without a prototype (created through `Object.create(null)`); thus\n            // `this.constructor` will be undefined. One of the use cases is SystemJS creating\n            // prototype-less objects (modules) via `Object.create(null)`. The SystemJS creates an empty\n            // object and copies promise properties into that object (within the `getOrCreateLoad`\n            // function). The zone.js then checks if the resolved value has the `then` method and invokes\n            // it with the `value` context. Otherwise, this will throw an error: `TypeError: Cannot read\n            // properties of undefined (reading 'Symbol(Symbol.species)')`.\n            let C = (_a = this.constructor) === null || _a === void 0 ? void 0 : _a[Symbol.species];\n            if (!C || typeof C !== 'function') {\n                C = this.constructor || ZoneAwarePromise;\n            }\n            const chainPromise = new C(noop);\n            const zone = Zone.current;\n            if (this[symbolState] == UNRESOLVED) {\n                this[symbolValue].push(zone, chainPromise, onFulfilled, onRejected);\n            }\n            else {\n                scheduleResolveOrReject(this, zone, chainPromise, onFulfilled, onRejected);\n            }\n            return chainPromise;\n        }\n        catch(onRejected) {\n            return this.then(null, onRejected);\n        }\n        finally(onFinally) {\n            var _a;\n            // See comment on the call to `then` about why thee `Symbol.species` is safely accessed.\n            let C = (_a = this.constructor) === null || _a === void 0 ? void 0 : _a[Symbol.species];\n            if (!C || typeof C !== 'function') {\n                C = ZoneAwarePromise;\n            }\n            const chainPromise = new C(noop);\n            chainPromise[symbolFinally] = symbolFinally;\n            const zone = Zone.current;\n            if (this[symbolState] == UNRESOLVED) {\n                this[symbolValue].push(zone, chainPromise, onFinally, onFinally);\n            }\n            else {\n                scheduleResolveOrReject(this, zone, chainPromise, onFinally, onFinally);\n            }\n            return chainPromise;\n        }\n    }\n    // Protect against aggressive optimizers dropping seemingly unused properties.\n    // E.g. Closure Compiler in advanced mode.\n    ZoneAwarePromise['resolve'] = ZoneAwarePromise.resolve;\n    ZoneAwarePromise['reject'] = ZoneAwarePromise.reject;\n    ZoneAwarePromise['race'] = ZoneAwarePromise.race;\n    ZoneAwarePromise['all'] = ZoneAwarePromise.all;\n    const NativePromise = global[symbolPromise] = global['Promise'];\n    global['Promise'] = ZoneAwarePromise;\n    const symbolThenPatched = __symbol__('thenPatched');\n    function patchThen(Ctor) {\n        const proto = Ctor.prototype;\n        const prop = ObjectGetOwnPropertyDescriptor(proto, 'then');\n        if (prop && (prop.writable === false || !prop.configurable)) {\n            // check Ctor.prototype.then propertyDescriptor is writable or not\n            // in meteor env, writable is false, we should ignore such case\n            return;\n        }\n        const originalThen = proto.then;\n        // Keep a reference to the original method.\n        proto[symbolThen] = originalThen;\n        Ctor.prototype.then = function (onResolve, onReject) {\n            const wrapped = new ZoneAwarePromise((resolve, reject) => {\n                originalThen.call(this, resolve, reject);\n            });\n            return wrapped.then(onResolve, onReject);\n        };\n        Ctor[symbolThenPatched] = true;\n    }\n    api.patchThen = patchThen;\n    function zoneify(fn) {\n        return function (self, args) {\n            let resultPromise = fn.apply(self, args);\n            if (resultPromise instanceof ZoneAwarePromise) {\n                return resultPromise;\n            }\n            let ctor = resultPromise.constructor;\n            if (!ctor[symbolThenPatched]) {\n                patchThen(ctor);\n            }\n            return resultPromise;\n        };\n    }\n    if (NativePromise) {\n        patchThen(NativePromise);\n        patchMethod(global, 'fetch', delegate => zoneify(delegate));\n    }\n    // This is not part of public API, but it is useful for tests, so we expose it.\n    Promise[Zone.__symbol__('uncaughtPromiseErrors')] = _uncaughtPromiseErrors;\n    return ZoneAwarePromise;\n});\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// override Function.prototype.toString to make zone.js patched function\n// look like native function\nZone.__load_patch('toString', (global) => {\n    // patch Func.prototype.toString to let them look like native\n    const originalFunctionToString = Function.prototype.toString;\n    const ORIGINAL_DELEGATE_SYMBOL = zoneSymbol('OriginalDelegate');\n    const PROMISE_SYMBOL = zoneSymbol('Promise');\n    const ERROR_SYMBOL = zoneSymbol('Error');\n    const newFunctionToString = function toString() {\n        if (typeof this === 'function') {\n            const originalDelegate = this[ORIGINAL_DELEGATE_SYMBOL];\n            if (originalDelegate) {\n                if (typeof originalDelegate === 'function') {\n                    return originalFunctionToString.call(originalDelegate);\n                }\n                else {\n                    return Object.prototype.toString.call(originalDelegate);\n                }\n            }\n            if (this === Promise) {\n                const nativePromise = global[PROMISE_SYMBOL];\n                if (nativePromise) {\n                    return originalFunctionToString.call(nativePromise);\n                }\n            }\n            if (this === Error) {\n                const nativeError = global[ERROR_SYMBOL];\n                if (nativeError) {\n                    return originalFunctionToString.call(nativeError);\n                }\n            }\n        }\n        return originalFunctionToString.call(this);\n    };\n    newFunctionToString[ORIGINAL_DELEGATE_SYMBOL] = originalFunctionToString;\n    Function.prototype.toString = newFunctionToString;\n    // patch Object.prototype.toString to let them look like native\n    const originalObjectToString = Object.prototype.toString;\n    const PROMISE_OBJECT_TO_STRING = '[object Promise]';\n    Object.prototype.toString = function () {\n        if (typeof Promise === 'function' && this instanceof Promise) {\n            return PROMISE_OBJECT_TO_STRING;\n        }\n        return originalObjectToString.call(this);\n    };\n});\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet passiveSupported = false;\nif (typeof window !== 'undefined') {\n    try {\n        const options = Object.defineProperty({}, 'passive', {\n            get: function () {\n                passiveSupported = true;\n            }\n        });\n        // Note: We pass the `options` object as the event handler too. This is not compatible with the\n        // signature of `addEventListener` or `removeEventListener` but enables us to remove the handler\n        // without an actual handler.\n        window.addEventListener('test', options, options);\n        window.removeEventListener('test', options, options);\n    }\n    catch (err) {\n        passiveSupported = false;\n    }\n}\n// an identifier to tell ZoneTask do not create a new invoke closure\nconst OPTIMIZED_ZONE_EVENT_TASK_DATA = {\n    useG: true\n};\nconst zoneSymbolEventNames = {};\nconst globalSources = {};\nconst EVENT_NAME_SYMBOL_REGX = new RegExp('^' + ZONE_SYMBOL_PREFIX + '(\\\\w+)(true|false)$');\nconst IMMEDIATE_PROPAGATION_SYMBOL = zoneSymbol('propagationStopped');\nfunction prepareEventNames(eventName, eventNameToString) {\n    const falseEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + FALSE_STR;\n    const trueEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + TRUE_STR;\n    const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n    const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n    zoneSymbolEventNames[eventName] = {};\n    zoneSymbolEventNames[eventName][FALSE_STR] = symbol;\n    zoneSymbolEventNames[eventName][TRUE_STR] = symbolCapture;\n}\nfunction patchEventTarget(_global, api, apis, patchOptions) {\n    const ADD_EVENT_LISTENER = (patchOptions && patchOptions.add) || ADD_EVENT_LISTENER_STR;\n    const REMOVE_EVENT_LISTENER = (patchOptions && patchOptions.rm) || REMOVE_EVENT_LISTENER_STR;\n    const LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.listeners) || 'eventListeners';\n    const REMOVE_ALL_LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.rmAll) || 'removeAllListeners';\n    const zoneSymbolAddEventListener = zoneSymbol(ADD_EVENT_LISTENER);\n    const ADD_EVENT_LISTENER_SOURCE = '.' + ADD_EVENT_LISTENER + ':';\n    const PREPEND_EVENT_LISTENER = 'prependListener';\n    const PREPEND_EVENT_LISTENER_SOURCE = '.' + PREPEND_EVENT_LISTENER + ':';\n    const invokeTask = function (task, target, event) {\n        // for better performance, check isRemoved which is set\n        // by removeEventListener\n        if (task.isRemoved) {\n            return;\n        }\n        const delegate = task.callback;\n        if (typeof delegate === 'object' && delegate.handleEvent) {\n            // create the bind version of handleEvent when invoke\n            task.callback = (event) => delegate.handleEvent(event);\n            task.originalDelegate = delegate;\n        }\n        // invoke static task.invoke\n        // need to try/catch error here, otherwise, the error in one event listener\n        // will break the executions of the other event listeners. Also error will\n        // not remove the event listener when `once` options is true.\n        let error;\n        try {\n            task.invoke(task, target, [event]);\n        }\n        catch (err) {\n            error = err;\n        }\n        const options = task.options;\n        if (options && typeof options === 'object' && options.once) {\n            // if options.once is true, after invoke once remove listener here\n            // only browser need to do this, nodejs eventEmitter will cal removeListener\n            // inside EventEmitter.once\n            const delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n            target[REMOVE_EVENT_LISTENER].call(target, event.type, delegate, options);\n        }\n        return error;\n    };\n    function globalCallback(context, event, isCapture) {\n        // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n        // event will be undefined, so we need to use window.event\n        event = event || _global.event;\n        if (!event) {\n            return;\n        }\n        // event.target is needed for Samsung TV and SourceBuffer\n        // || global is needed https://github.com/angular/zone.js/issues/190\n        const target = context || event.target || _global;\n        const tasks = target[zoneSymbolEventNames[event.type][isCapture ? TRUE_STR : FALSE_STR]];\n        if (tasks) {\n            const errors = [];\n            // invoke all tasks which attached to current target with given event.type and capture = false\n            // for performance concern, if task.length === 1, just invoke\n            if (tasks.length === 1) {\n                const err = invokeTask(tasks[0], target, event);\n                err && errors.push(err);\n            }\n            else {\n                // https://github.com/angular/zone.js/issues/836\n                // copy the tasks array before invoke, to avoid\n                // the callback will remove itself or other listener\n                const copyTasks = tasks.slice();\n                for (let i = 0; i < copyTasks.length; i++) {\n                    if (event && event[IMMEDIATE_PROPAGATION_SYMBOL] === true) {\n                        break;\n                    }\n                    const err = invokeTask(copyTasks[i], target, event);\n                    err && errors.push(err);\n                }\n            }\n            // Since there is only one error, we don't need to schedule microTask\n            // to throw the error.\n            if (errors.length === 1) {\n                throw errors[0];\n            }\n            else {\n                for (let i = 0; i < errors.length; i++) {\n                    const err = errors[i];\n                    api.nativeScheduleMicroTask(() => {\n                        throw err;\n                    });\n                }\n            }\n        }\n    }\n    // global shared zoneAwareCallback to handle all event callback with capture = false\n    const globalZoneAwareCallback = function (event) {\n        return globalCallback(this, event, false);\n    };\n    // global shared zoneAwareCallback to handle all event callback with capture = true\n    const globalZoneAwareCaptureCallback = function (event) {\n        return globalCallback(this, event, true);\n    };\n    function patchEventTargetMethods(obj, patchOptions) {\n        if (!obj) {\n            return false;\n        }\n        let useGlobalCallback = true;\n        if (patchOptions && patchOptions.useG !== undefined) {\n            useGlobalCallback = patchOptions.useG;\n        }\n        const validateHandler = patchOptions && patchOptions.vh;\n        let checkDuplicate = true;\n        if (patchOptions && patchOptions.chkDup !== undefined) {\n            checkDuplicate = patchOptions.chkDup;\n        }\n        let returnTarget = false;\n        if (patchOptions && patchOptions.rt !== undefined) {\n            returnTarget = patchOptions.rt;\n        }\n        let proto = obj;\n        while (proto && !proto.hasOwnProperty(ADD_EVENT_LISTENER)) {\n            proto = ObjectGetPrototypeOf(proto);\n        }\n        if (!proto && obj[ADD_EVENT_LISTENER]) {\n            // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n            proto = obj;\n        }\n        if (!proto) {\n            return false;\n        }\n        if (proto[zoneSymbolAddEventListener]) {\n            return false;\n        }\n        const eventNameToString = patchOptions && patchOptions.eventNameToString;\n        // a shared global taskData to pass data for scheduleEventTask\n        // so we do not need to create a new object just for pass some data\n        const taskData = {};\n        const nativeAddEventListener = proto[zoneSymbolAddEventListener] = proto[ADD_EVENT_LISTENER];\n        const nativeRemoveEventListener = proto[zoneSymbol(REMOVE_EVENT_LISTENER)] =\n            proto[REMOVE_EVENT_LISTENER];\n        const nativeListeners = proto[zoneSymbol(LISTENERS_EVENT_LISTENER)] =\n            proto[LISTENERS_EVENT_LISTENER];\n        const nativeRemoveAllListeners = proto[zoneSymbol(REMOVE_ALL_LISTENERS_EVENT_LISTENER)] =\n            proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER];\n        let nativePrependEventListener;\n        if (patchOptions && patchOptions.prepend) {\n            nativePrependEventListener = proto[zoneSymbol(patchOptions.prepend)] =\n                proto[patchOptions.prepend];\n        }\n        /**\n         * This util function will build an option object with passive option\n         * to handle all possible input from the user.\n         */\n        function buildEventListenerOptions(options, passive) {\n            if (!passiveSupported && typeof options === 'object' && options) {\n                // doesn't support passive but user want to pass an object as options.\n                // this will not work on some old browser, so we just pass a boolean\n                // as useCapture parameter\n                return !!options.capture;\n            }\n            if (!passiveSupported || !passive) {\n                return options;\n            }\n            if (typeof options === 'boolean') {\n                return { capture: options, passive: true };\n            }\n            if (!options) {\n                return { passive: true };\n            }\n            if (typeof options === 'object' && options.passive !== false) {\n                return Object.assign(Object.assign({}, options), { passive: true });\n            }\n            return options;\n        }\n        const customScheduleGlobal = function (task) {\n            // if there is already a task for the eventName + capture,\n            // just return, because we use the shared globalZoneAwareCallback here.\n            if (taskData.isExisting) {\n                return;\n            }\n            return nativeAddEventListener.call(taskData.target, taskData.eventName, taskData.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, taskData.options);\n        };\n        const customCancelGlobal = function (task) {\n            // if task is not marked as isRemoved, this call is directly\n            // from Zone.prototype.cancelTask, we should remove the task\n            // from tasksList of target first\n            if (!task.isRemoved) {\n                const symbolEventNames = zoneSymbolEventNames[task.eventName];\n                let symbolEventName;\n                if (symbolEventNames) {\n                    symbolEventName = symbolEventNames[task.capture ? TRUE_STR : FALSE_STR];\n                }\n                const existingTasks = symbolEventName && task.target[symbolEventName];\n                if (existingTasks) {\n                    for (let i = 0; i < existingTasks.length; i++) {\n                        const existingTask = existingTasks[i];\n                        if (existingTask === task) {\n                            existingTasks.splice(i, 1);\n                            // set isRemoved to data for faster invokeTask check\n                            task.isRemoved = true;\n                            if (existingTasks.length === 0) {\n                                // all tasks for the eventName + capture have gone,\n                                // remove globalZoneAwareCallback and remove the task cache from target\n                                task.allRemoved = true;\n                                task.target[symbolEventName] = null;\n                            }\n                            break;\n                        }\n                    }\n                }\n            }\n            // if all tasks for the eventName + capture have gone,\n            // we will really remove the global event callback,\n            // if not, return\n            if (!task.allRemoved) {\n                return;\n            }\n            return nativeRemoveEventListener.call(task.target, task.eventName, task.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, task.options);\n        };\n        const customScheduleNonGlobal = function (task) {\n            return nativeAddEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n        };\n        const customSchedulePrepend = function (task) {\n            return nativePrependEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n        };\n        const customCancelNonGlobal = function (task) {\n            return nativeRemoveEventListener.call(task.target, task.eventName, task.invoke, task.options);\n        };\n        const customSchedule = useGlobalCallback ? customScheduleGlobal : customScheduleNonGlobal;\n        const customCancel = useGlobalCallback ? customCancelGlobal : customCancelNonGlobal;\n        const compareTaskCallbackVsDelegate = function (task, delegate) {\n            const typeOfDelegate = typeof delegate;\n            return (typeOfDelegate === 'function' && task.callback === delegate) ||\n                (typeOfDelegate === 'object' && task.originalDelegate === delegate);\n        };\n        const compare = (patchOptions && patchOptions.diff) ? patchOptions.diff : compareTaskCallbackVsDelegate;\n        const unpatchedEvents = Zone[zoneSymbol('UNPATCHED_EVENTS')];\n        const passiveEvents = _global[zoneSymbol('PASSIVE_EVENTS')];\n        const makeAddListener = function (nativeListener, addSource, customScheduleFn, customCancelFn, returnTarget = false, prepend = false) {\n            return function () {\n                const target = this || _global;\n                let eventName = arguments[0];\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                let delegate = arguments[1];\n                if (!delegate) {\n                    return nativeListener.apply(this, arguments);\n                }\n                if (isNode && eventName === 'uncaughtException') {\n                    // don't patch uncaughtException of nodejs to prevent endless loop\n                    return nativeListener.apply(this, arguments);\n                }\n                // don't create the bind delegate function for handleEvent\n                // case here to improve addEventListener performance\n                // we will create the bind delegate when invoke\n                let isHandleEvent = false;\n                if (typeof delegate !== 'function') {\n                    if (!delegate.handleEvent) {\n                        return nativeListener.apply(this, arguments);\n                    }\n                    isHandleEvent = true;\n                }\n                if (validateHandler && !validateHandler(nativeListener, delegate, target, arguments)) {\n                    return;\n                }\n                const passive = passiveSupported && !!passiveEvents && passiveEvents.indexOf(eventName) !== -1;\n                const options = buildEventListenerOptions(arguments[2], passive);\n                if (unpatchedEvents) {\n                    // check unpatched list\n                    for (let i = 0; i < unpatchedEvents.length; i++) {\n                        if (eventName === unpatchedEvents[i]) {\n                            if (passive) {\n                                return nativeListener.call(target, eventName, delegate, options);\n                            }\n                            else {\n                                return nativeListener.apply(this, arguments);\n                            }\n                        }\n                    }\n                }\n                const capture = !options ? false : typeof options === 'boolean' ? true : options.capture;\n                const once = options && typeof options === 'object' ? options.once : false;\n                const zone = Zone.current;\n                let symbolEventNames = zoneSymbolEventNames[eventName];\n                if (!symbolEventNames) {\n                    prepareEventNames(eventName, eventNameToString);\n                    symbolEventNames = zoneSymbolEventNames[eventName];\n                }\n                const symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n                let existingTasks = target[symbolEventName];\n                let isExisting = false;\n                if (existingTasks) {\n                    // already have task registered\n                    isExisting = true;\n                    if (checkDuplicate) {\n                        for (let i = 0; i < existingTasks.length; i++) {\n                            if (compare(existingTasks[i], delegate)) {\n                                // same callback, same capture, same event name, just return\n                                return;\n                            }\n                        }\n                    }\n                }\n                else {\n                    existingTasks = target[symbolEventName] = [];\n                }\n                let source;\n                const constructorName = target.constructor['name'];\n                const targetSource = globalSources[constructorName];\n                if (targetSource) {\n                    source = targetSource[eventName];\n                }\n                if (!source) {\n                    source = constructorName + addSource +\n                        (eventNameToString ? eventNameToString(eventName) : eventName);\n                }\n                // do not create a new object as task.data to pass those things\n                // just use the global shared one\n                taskData.options = options;\n                if (once) {\n                    // if addEventListener with once options, we don't pass it to\n                    // native addEventListener, instead we keep the once setting\n                    // and handle ourselves.\n                    taskData.options.once = false;\n                }\n                taskData.target = target;\n                taskData.capture = capture;\n                taskData.eventName = eventName;\n                taskData.isExisting = isExisting;\n                const data = useGlobalCallback ? OPTIMIZED_ZONE_EVENT_TASK_DATA : undefined;\n                // keep taskData into data to allow onScheduleEventTask to access the task information\n                if (data) {\n                    data.taskData = taskData;\n                }\n                const task = zone.scheduleEventTask(source, delegate, data, customScheduleFn, customCancelFn);\n                // should clear taskData.target to avoid memory leak\n                // issue, https://github.com/angular/angular/issues/20442\n                taskData.target = null;\n                // need to clear up taskData because it is a global object\n                if (data) {\n                    data.taskData = null;\n                }\n                // have to save those information to task in case\n                // application may call task.zone.cancelTask() directly\n                if (once) {\n                    options.once = true;\n                }\n                if (!(!passiveSupported && typeof task.options === 'boolean')) {\n                    // if not support passive, and we pass an option object\n                    // to addEventListener, we should save the options to task\n                    task.options = options;\n                }\n                task.target = target;\n                task.capture = capture;\n                task.eventName = eventName;\n                if (isHandleEvent) {\n                    // save original delegate for compare to check duplicate\n                    task.originalDelegate = delegate;\n                }\n                if (!prepend) {\n                    existingTasks.push(task);\n                }\n                else {\n                    existingTasks.unshift(task);\n                }\n                if (returnTarget) {\n                    return target;\n                }\n            };\n        };\n        proto[ADD_EVENT_LISTENER] = makeAddListener(nativeAddEventListener, ADD_EVENT_LISTENER_SOURCE, customSchedule, customCancel, returnTarget);\n        if (nativePrependEventListener) {\n            proto[PREPEND_EVENT_LISTENER] = makeAddListener(nativePrependEventListener, PREPEND_EVENT_LISTENER_SOURCE, customSchedulePrepend, customCancel, returnTarget, true);\n        }\n        proto[REMOVE_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (patchOptions && patchOptions.transferEventName) {\n                eventName = patchOptions.transferEventName(eventName);\n            }\n            const options = arguments[2];\n            const capture = !options ? false : typeof options === 'boolean' ? true : options.capture;\n            const delegate = arguments[1];\n            if (!delegate) {\n                return nativeRemoveEventListener.apply(this, arguments);\n            }\n            if (validateHandler &&\n                !validateHandler(nativeRemoveEventListener, delegate, target, arguments)) {\n                return;\n            }\n            const symbolEventNames = zoneSymbolEventNames[eventName];\n            let symbolEventName;\n            if (symbolEventNames) {\n                symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n            }\n            const existingTasks = symbolEventName && target[symbolEventName];\n            if (existingTasks) {\n                for (let i = 0; i < existingTasks.length; i++) {\n                    const existingTask = existingTasks[i];\n                    if (compare(existingTask, delegate)) {\n                        existingTasks.splice(i, 1);\n                        // set isRemoved to data for faster invokeTask check\n                        existingTask.isRemoved = true;\n                        if (existingTasks.length === 0) {\n                            // all tasks for the eventName + capture have gone,\n                            // remove globalZoneAwareCallback and remove the task cache from target\n                            existingTask.allRemoved = true;\n                            target[symbolEventName] = null;\n                            // in the target, we have an event listener which is added by on_property\n                            // such as target.onclick = function() {}, so we need to clear this internal\n                            // property too if all delegates all removed\n                            if (typeof eventName === 'string') {\n                                const onPropertySymbol = ZONE_SYMBOL_PREFIX + 'ON_PROPERTY' + eventName;\n                                target[onPropertySymbol] = null;\n                            }\n                        }\n                        existingTask.zone.cancelTask(existingTask);\n                        if (returnTarget) {\n                            return target;\n                        }\n                        return;\n                    }\n                }\n            }\n            // issue 930, didn't find the event name or callback\n            // from zone kept existingTasks, the callback maybe\n            // added outside of zone, we need to call native removeEventListener\n            // to try to remove it.\n            return nativeRemoveEventListener.apply(this, arguments);\n        };\n        proto[LISTENERS_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (patchOptions && patchOptions.transferEventName) {\n                eventName = patchOptions.transferEventName(eventName);\n            }\n            const listeners = [];\n            const tasks = findEventTasks(target, eventNameToString ? eventNameToString(eventName) : eventName);\n            for (let i = 0; i < tasks.length; i++) {\n                const task = tasks[i];\n                let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                listeners.push(delegate);\n            }\n            return listeners;\n        };\n        proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (!eventName) {\n                const keys = Object.keys(target);\n                for (let i = 0; i < keys.length; i++) {\n                    const prop = keys[i];\n                    const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n                    let evtName = match && match[1];\n                    // in nodejs EventEmitter, removeListener event is\n                    // used for monitoring the removeListener call,\n                    // so just keep removeListener eventListener until\n                    // all other eventListeners are removed\n                    if (evtName && evtName !== 'removeListener') {\n                        this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, evtName);\n                    }\n                }\n                // remove removeListener listener finally\n                this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, 'removeListener');\n            }\n            else {\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                const symbolEventNames = zoneSymbolEventNames[eventName];\n                if (symbolEventNames) {\n                    const symbolEventName = symbolEventNames[FALSE_STR];\n                    const symbolCaptureEventName = symbolEventNames[TRUE_STR];\n                    const tasks = target[symbolEventName];\n                    const captureTasks = target[symbolCaptureEventName];\n                    if (tasks) {\n                        const removeTasks = tasks.slice();\n                        for (let i = 0; i < removeTasks.length; i++) {\n                            const task = removeTasks[i];\n                            let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                            this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                        }\n                    }\n                    if (captureTasks) {\n                        const removeTasks = captureTasks.slice();\n                        for (let i = 0; i < removeTasks.length; i++) {\n                            const task = removeTasks[i];\n                            let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                            this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                        }\n                    }\n                }\n            }\n            if (returnTarget) {\n                return this;\n            }\n        };\n        // for native toString patch\n        attachOriginToPatched(proto[ADD_EVENT_LISTENER], nativeAddEventListener);\n        attachOriginToPatched(proto[REMOVE_EVENT_LISTENER], nativeRemoveEventListener);\n        if (nativeRemoveAllListeners) {\n            attachOriginToPatched(proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER], nativeRemoveAllListeners);\n        }\n        if (nativeListeners) {\n            attachOriginToPatched(proto[LISTENERS_EVENT_LISTENER], nativeListeners);\n        }\n        return true;\n    }\n    let results = [];\n    for (let i = 0; i < apis.length; i++) {\n        results[i] = patchEventTargetMethods(apis[i], patchOptions);\n    }\n    return results;\n}\nfunction findEventTasks(target, eventName) {\n    if (!eventName) {\n        const foundTasks = [];\n        for (let prop in target) {\n            const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n            let evtName = match && match[1];\n            if (evtName && (!eventName || evtName === eventName)) {\n                const tasks = target[prop];\n                if (tasks) {\n                    for (let i = 0; i < tasks.length; i++) {\n                        foundTasks.push(tasks[i]);\n                    }\n                }\n            }\n        }\n        return foundTasks;\n    }\n    let symbolEventName = zoneSymbolEventNames[eventName];\n    if (!symbolEventName) {\n        prepareEventNames(eventName);\n        symbolEventName = zoneSymbolEventNames[eventName];\n    }\n    const captureFalseTasks = target[symbolEventName[FALSE_STR]];\n    const captureTrueTasks = target[symbolEventName[TRUE_STR]];\n    if (!captureFalseTasks) {\n        return captureTrueTasks ? captureTrueTasks.slice() : [];\n    }\n    else {\n        return captureTrueTasks ? captureFalseTasks.concat(captureTrueTasks) :\n            captureFalseTasks.slice();\n    }\n}\nfunction patchEventPrototype(global, api) {\n    const Event = global['Event'];\n    if (Event && Event.prototype) {\n        api.patchMethod(Event.prototype, 'stopImmediatePropagation', (delegate) => function (self, args) {\n            self[IMMEDIATE_PROPAGATION_SYMBOL] = true;\n            // we need to call the native stopImmediatePropagation\n            // in case in some hybrid application, some part of\n            // application will be controlled by zone, some are not\n            delegate && delegate.apply(self, args);\n        });\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction patchCallbacks(api, target, targetName, method, callbacks) {\n    const symbol = Zone.__symbol__(method);\n    if (target[symbol]) {\n        return;\n    }\n    const nativeDelegate = target[symbol] = target[method];\n    target[method] = function (name, opts, options) {\n        if (opts && opts.prototype) {\n            callbacks.forEach(function (callback) {\n                const source = `${targetName}.${method}::` + callback;\n                const prototype = opts.prototype;\n                // Note: the `patchCallbacks` is used for patching the `document.registerElement` and\n                // `customElements.define`. We explicitly wrap the patching code into try-catch since\n                // callbacks may be already patched by other web components frameworks (e.g. LWC), and they\n                // make those properties non-writable. This means that patching callback will throw an error\n                // `cannot assign to read-only property`. See this code as an example:\n                // https://github.com/salesforce/lwc/blob/master/packages/@lwc/engine-core/src/framework/base-bridge-element.ts#L180-L186\n                // We don't want to stop the application rendering if we couldn't patch some\n                // callback, e.g. `attributeChangedCallback`.\n                try {\n                    if (prototype.hasOwnProperty(callback)) {\n                        const descriptor = api.ObjectGetOwnPropertyDescriptor(prototype, callback);\n                        if (descriptor && descriptor.value) {\n                            descriptor.value = api.wrapWithCurrentZone(descriptor.value, source);\n                            api._redefineProperty(opts.prototype, callback, descriptor);\n                        }\n                        else if (prototype[callback]) {\n                            prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                        }\n                    }\n                    else if (prototype[callback]) {\n                        prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                    }\n                }\n                catch (_a) {\n                    // Note: we leave the catch block empty since there's no way to handle the error related\n                    // to non-writable property.\n                }\n            });\n        }\n        return nativeDelegate.call(target, name, opts, options);\n    };\n    api.attachOriginToPatched(target[method], nativeDelegate);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction filterProperties(target, onProperties, ignoreProperties) {\n    if (!ignoreProperties || ignoreProperties.length === 0) {\n        return onProperties;\n    }\n    const tip = ignoreProperties.filter(ip => ip.target === target);\n    if (!tip || tip.length === 0) {\n        return onProperties;\n    }\n    const targetIgnoreProperties = tip[0].ignoreProperties;\n    return onProperties.filter(op => targetIgnoreProperties.indexOf(op) === -1);\n}\nfunction patchFilteredProperties(target, onProperties, ignoreProperties, prototype) {\n    // check whether target is available, sometimes target will be undefined\n    // because different browser or some 3rd party plugin.\n    if (!target) {\n        return;\n    }\n    const filteredProperties = filterProperties(target, onProperties, ignoreProperties);\n    patchOnProperties(target, filteredProperties, prototype);\n}\n/**\n * Get all event name properties which the event name startsWith `on`\n * from the target object itself, inherited properties are not considered.\n */\nfunction getOnEventNames(target) {\n    return Object.getOwnPropertyNames(target)\n        .filter(name => name.startsWith('on') && name.length > 2)\n        .map(name => name.substring(2));\n}\nfunction propertyDescriptorPatch(api, _global) {\n    if (isNode && !isMix) {\n        return;\n    }\n    if (Zone[api.symbol('patchEvents')]) {\n        // events are already been patched by legacy patch.\n        return;\n    }\n    const ignoreProperties = _global['__Zone_ignore_on_properties'];\n    // for browsers that we can patch the descriptor:  Chrome & Firefox\n    let patchTargets = [];\n    if (isBrowser) {\n        const internalWindow = window;\n        patchTargets = patchTargets.concat([\n            'Document', 'SVGElement', 'Element', 'HTMLElement', 'HTMLBodyElement', 'HTMLMediaElement',\n            'HTMLFrameSetElement', 'HTMLFrameElement', 'HTMLIFrameElement', 'HTMLMarqueeElement', 'Worker'\n        ]);\n        const ignoreErrorProperties = isIE() ? [{ target: internalWindow, ignoreProperties: ['error'] }] : [];\n        // in IE/Edge, onProp not exist in window object, but in WindowPrototype\n        // so we need to pass WindowPrototype to check onProp exist or not\n        patchFilteredProperties(internalWindow, getOnEventNames(internalWindow), ignoreProperties ? ignoreProperties.concat(ignoreErrorProperties) : ignoreProperties, ObjectGetPrototypeOf(internalWindow));\n    }\n    patchTargets = patchTargets.concat([\n        'XMLHttpRequest', 'XMLHttpRequestEventTarget', 'IDBIndex', 'IDBRequest', 'IDBOpenDBRequest',\n        'IDBDatabase', 'IDBTransaction', 'IDBCursor', 'WebSocket'\n    ]);\n    for (let i = 0; i < patchTargets.length; i++) {\n        const target = _global[patchTargets[i]];\n        target && target.prototype &&\n            patchFilteredProperties(target.prototype, getOnEventNames(target.prototype), ignoreProperties);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nZone.__load_patch('util', (global, Zone, api) => {\n    // Collect native event names by looking at properties\n    // on the global namespace, e.g. 'onclick'.\n    const eventNames = getOnEventNames(global);\n    api.patchOnProperties = patchOnProperties;\n    api.patchMethod = patchMethod;\n    api.bindArguments = bindArguments;\n    api.patchMacroTask = patchMacroTask;\n    // In earlier version of zone.js (<0.9.0), we use env name `__zone_symbol__BLACK_LISTED_EVENTS` to\n    // define which events will not be patched by `Zone.js`.\n    // In newer version (>=0.9.0), we change the env name to `__zone_symbol__UNPATCHED_EVENTS` to keep\n    // the name consistent with angular repo.\n    // The  `__zone_symbol__BLACK_LISTED_EVENTS` is deprecated, but it is still be supported for\n    // backwards compatibility.\n    const SYMBOL_BLACK_LISTED_EVENTS = Zone.__symbol__('BLACK_LISTED_EVENTS');\n    const SYMBOL_UNPATCHED_EVENTS = Zone.__symbol__('UNPATCHED_EVENTS');\n    if (global[SYMBOL_UNPATCHED_EVENTS]) {\n        global[SYMBOL_BLACK_LISTED_EVENTS] = global[SYMBOL_UNPATCHED_EVENTS];\n    }\n    if (global[SYMBOL_BLACK_LISTED_EVENTS]) {\n        Zone[SYMBOL_BLACK_LISTED_EVENTS] = Zone[SYMBOL_UNPATCHED_EVENTS] =\n            global[SYMBOL_BLACK_LISTED_EVENTS];\n    }\n    api.patchEventPrototype = patchEventPrototype;\n    api.patchEventTarget = patchEventTarget;\n    api.isIEOrEdge = isIEOrEdge;\n    api.ObjectDefineProperty = ObjectDefineProperty;\n    api.ObjectGetOwnPropertyDescriptor = ObjectGetOwnPropertyDescriptor;\n    api.ObjectCreate = ObjectCreate;\n    api.ArraySlice = ArraySlice;\n    api.patchClass = patchClass;\n    api.wrapWithCurrentZone = wrapWithCurrentZone;\n    api.filterProperties = filterProperties;\n    api.attachOriginToPatched = attachOriginToPatched;\n    api._redefineProperty = Object.defineProperty;\n    api.patchCallbacks = patchCallbacks;\n    api.getGlobalObjects = () => ({\n        globalSources,\n        zoneSymbolEventNames,\n        eventNames,\n        isBrowser,\n        isMix,\n        isNode,\n        TRUE_STR,\n        FALSE_STR,\n        ZONE_SYMBOL_PREFIX,\n        ADD_EVENT_LISTENER_STR,\n        REMOVE_EVENT_LISTENER_STR\n    });\n});\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst taskSymbol = zoneSymbol('zoneTask');\nfunction patchTimer(window, setName, cancelName, nameSuffix) {\n    let setNative = null;\n    let clearNative = null;\n    setName += nameSuffix;\n    cancelName += nameSuffix;\n    const tasksByHandleId = {};\n    function scheduleTask(task) {\n        const data = task.data;\n        data.args[0] = function () {\n            return task.invoke.apply(this, arguments);\n        };\n        data.handleId = setNative.apply(window, data.args);\n        return task;\n    }\n    function clearTask(task) {\n        return clearNative.call(window, task.data.handleId);\n    }\n    setNative =\n        patchMethod(window, setName, (delegate) => function (self, args) {\n            if (typeof args[0] === 'function') {\n                const options = {\n                    isPeriodic: nameSuffix === 'Interval',\n                    delay: (nameSuffix === 'Timeout' || nameSuffix === 'Interval') ? args[1] || 0 :\n                        undefined,\n                    args: args\n                };\n                const callback = args[0];\n                args[0] = function timer() {\n                    try {\n                        return callback.apply(this, arguments);\n                    }\n                    finally {\n                        // issue-934, task will be cancelled\n                        // even it is a periodic task such as\n                        // setInterval\n                        // https://github.com/angular/angular/issues/40387\n                        // Cleanup tasksByHandleId should be handled before scheduleTask\n                        // Since some zoneSpec may intercept and doesn't trigger\n                        // scheduleFn(scheduleTask) provided here.\n                        if (!(options.isPeriodic)) {\n                            if (typeof options.handleId === 'number') {\n                                // in non-nodejs env, we remove timerId\n                                // from local cache\n                                delete tasksByHandleId[options.handleId];\n                            }\n                            else if (options.handleId) {\n                                // Node returns complex objects as handleIds\n                                // we remove task reference from timer object\n                                options.handleId[taskSymbol] = null;\n                            }\n                        }\n                    }\n                };\n                const task = scheduleMacroTaskWithCurrentZone(setName, args[0], options, scheduleTask, clearTask);\n                if (!task) {\n                    return task;\n                }\n                // Node.js must additionally support the ref and unref functions.\n                const handle = task.data.handleId;\n                if (typeof handle === 'number') {\n                    // for non nodejs env, we save handleId: task\n                    // mapping in local cache for clearTimeout\n                    tasksByHandleId[handle] = task;\n                }\n                else if (handle) {\n                    // for nodejs env, we save task\n                    // reference in timerId Object for clearTimeout\n                    handle[taskSymbol] = task;\n                }\n                // check whether handle is null, because some polyfill or browser\n                // may return undefined from setTimeout/setInterval/setImmediate/requestAnimationFrame\n                if (handle && handle.ref && handle.unref && typeof handle.ref === 'function' &&\n                    typeof handle.unref === 'function') {\n                    task.ref = handle.ref.bind(handle);\n                    task.unref = handle.unref.bind(handle);\n                }\n                if (typeof handle === 'number' || handle) {\n                    return handle;\n                }\n                return task;\n            }\n            else {\n                // cause an error by calling it directly.\n                return delegate.apply(window, args);\n            }\n        });\n    clearNative =\n        patchMethod(window, cancelName, (delegate) => function (self, args) {\n            const id = args[0];\n            let task;\n            if (typeof id === 'number') {\n                // non nodejs env.\n                task = tasksByHandleId[id];\n            }\n            else {\n                // nodejs env.\n                task = id && id[taskSymbol];\n                // other environments.\n                if (!task) {\n                    task = id;\n                }\n            }\n            if (task && typeof task.type === 'string') {\n                if (task.state !== 'notScheduled' &&\n                    (task.cancelFn && task.data.isPeriodic || task.runCount === 0)) {\n                    if (typeof id === 'number') {\n                        delete tasksByHandleId[id];\n                    }\n                    else if (id) {\n                        id[taskSymbol] = null;\n                    }\n                    // Do not cancel already canceled functions\n                    task.zone.cancelTask(task);\n                }\n            }\n            else {\n                // cause an error by calling it directly.\n                delegate.apply(window, args);\n            }\n        });\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction patchCustomElements(_global, api) {\n    const { isBrowser, isMix } = api.getGlobalObjects();\n    if ((!isBrowser && !isMix) || !_global['customElements'] || !('customElements' in _global)) {\n        return;\n    }\n    const callbacks = ['connectedCallback', 'disconnectedCallback', 'adoptedCallback', 'attributeChangedCallback'];\n    api.patchCallbacks(api, _global.customElements, 'customElements', 'define', callbacks);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction eventTargetPatch(_global, api) {\n    if (Zone[api.symbol('patchEventTarget')]) {\n        // EventTarget is already patched.\n        return;\n    }\n    const { eventNames, zoneSymbolEventNames, TRUE_STR, FALSE_STR, ZONE_SYMBOL_PREFIX } = api.getGlobalObjects();\n    //  predefine all __zone_symbol__ + eventName + true/false string\n    for (let i = 0; i < eventNames.length; i++) {\n        const eventName = eventNames[i];\n        const falseEventName = eventName + FALSE_STR;\n        const trueEventName = eventName + TRUE_STR;\n        const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n        const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n        zoneSymbolEventNames[eventName] = {};\n        zoneSymbolEventNames[eventName][FALSE_STR] = symbol;\n        zoneSymbolEventNames[eventName][TRUE_STR] = symbolCapture;\n    }\n    const EVENT_TARGET = _global['EventTarget'];\n    if (!EVENT_TARGET || !EVENT_TARGET.prototype) {\n        return;\n    }\n    api.patchEventTarget(_global, api, [EVENT_TARGET && EVENT_TARGET.prototype]);\n    return true;\n}\nfunction patchEvent(global, api) {\n    api.patchEventPrototype(global, api);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nZone.__load_patch('legacy', (global) => {\n    const legacyPatch = global[Zone.__symbol__('legacyPatch')];\n    if (legacyPatch) {\n        legacyPatch();\n    }\n});\nZone.__load_patch('queueMicrotask', (global, Zone, api) => {\n    api.patchMethod(global, 'queueMicrotask', delegate => {\n        return function (self, args) {\n            Zone.current.scheduleMicroTask('queueMicrotask', args[0]);\n        };\n    });\n});\nZone.__load_patch('timers', (global) => {\n    const set = 'set';\n    const clear = 'clear';\n    patchTimer(global, set, clear, 'Timeout');\n    patchTimer(global, set, clear, 'Interval');\n    patchTimer(global, set, clear, 'Immediate');\n});\nZone.__load_patch('requestAnimationFrame', (global) => {\n    patchTimer(global, 'request', 'cancel', 'AnimationFrame');\n    patchTimer(global, 'mozRequest', 'mozCancel', 'AnimationFrame');\n    patchTimer(global, 'webkitRequest', 'webkitCancel', 'AnimationFrame');\n});\nZone.__load_patch('blocking', (global, Zone) => {\n    const blockingMethods = ['alert', 'prompt', 'confirm'];\n    for (let i = 0; i < blockingMethods.length; i++) {\n        const name = blockingMethods[i];\n        patchMethod(global, name, (delegate, symbol, name) => {\n            return function (s, args) {\n                return Zone.current.run(delegate, global, args, name);\n            };\n        });\n    }\n});\nZone.__load_patch('EventTarget', (global, Zone, api) => {\n    patchEvent(global, api);\n    eventTargetPatch(global, api);\n    // patch XMLHttpRequestEventTarget's addEventListener/removeEventListener\n    const XMLHttpRequestEventTarget = global['XMLHttpRequestEventTarget'];\n    if (XMLHttpRequestEventTarget && XMLHttpRequestEventTarget.prototype) {\n        api.patchEventTarget(global, api, [XMLHttpRequestEventTarget.prototype]);\n    }\n});\nZone.__load_patch('MutationObserver', (global, Zone, api) => {\n    patchClass('MutationObserver');\n    patchClass('WebKitMutationObserver');\n});\nZone.__load_patch('IntersectionObserver', (global, Zone, api) => {\n    patchClass('IntersectionObserver');\n});\nZone.__load_patch('FileReader', (global, Zone, api) => {\n    patchClass('FileReader');\n});\nZone.__load_patch('on_property', (global, Zone, api) => {\n    propertyDescriptorPatch(api, global);\n});\nZone.__load_patch('customElements', (global, Zone, api) => {\n    patchCustomElements(global, api);\n});\nZone.__load_patch('XHR', (global, Zone) => {\n    // Treat XMLHttpRequest as a macrotask.\n    patchXHR(global);\n    const XHR_TASK = zoneSymbol('xhrTask');\n    const XHR_SYNC = zoneSymbol('xhrSync');\n    const XHR_LISTENER = zoneSymbol('xhrListener');\n    const XHR_SCHEDULED = zoneSymbol('xhrScheduled');\n    const XHR_URL = zoneSymbol('xhrURL');\n    const XHR_ERROR_BEFORE_SCHEDULED = zoneSymbol('xhrErrorBeforeScheduled');\n    function patchXHR(window) {\n        const XMLHttpRequest = window['XMLHttpRequest'];\n        if (!XMLHttpRequest) {\n            // XMLHttpRequest is not available in service worker\n            return;\n        }\n        const XMLHttpRequestPrototype = XMLHttpRequest.prototype;\n        function findPendingTask(target) {\n            return target[XHR_TASK];\n        }\n        let oriAddListener = XMLHttpRequestPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n        let oriRemoveListener = XMLHttpRequestPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n        if (!oriAddListener) {\n            const XMLHttpRequestEventTarget = window['XMLHttpRequestEventTarget'];\n            if (XMLHttpRequestEventTarget) {\n                const XMLHttpRequestEventTargetPrototype = XMLHttpRequestEventTarget.prototype;\n                oriAddListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                oriRemoveListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n            }\n        }\n        const READY_STATE_CHANGE = 'readystatechange';\n        const SCHEDULED = 'scheduled';\n        function scheduleTask(task) {\n            const data = task.data;\n            const target = data.target;\n            target[XHR_SCHEDULED] = false;\n            target[XHR_ERROR_BEFORE_SCHEDULED] = false;\n            // remove existing event listener\n            const listener = target[XHR_LISTENER];\n            if (!oriAddListener) {\n                oriAddListener = target[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                oriRemoveListener = target[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n            }\n            if (listener) {\n                oriRemoveListener.call(target, READY_STATE_CHANGE, listener);\n            }\n            const newListener = target[XHR_LISTENER] = () => {\n                if (target.readyState === target.DONE) {\n                    // sometimes on some browsers XMLHttpRequest will fire onreadystatechange with\n                    // readyState=4 multiple times, so we need to check task state here\n                    if (!data.aborted && target[XHR_SCHEDULED] && task.state === SCHEDULED) {\n                        // check whether the xhr has registered onload listener\n                        // if that is the case, the task should invoke after all\n                        // onload listeners finish.\n                        // Also if the request failed without response (status = 0), the load event handler\n                        // will not be triggered, in that case, we should also invoke the placeholder callback\n                        // to close the XMLHttpRequest::send macroTask.\n                        // https://github.com/angular/angular/issues/38795\n                        const loadTasks = target[Zone.__symbol__('loadfalse')];\n                        if (target.status !== 0 && loadTasks && loadTasks.length > 0) {\n                            const oriInvoke = task.invoke;\n                            task.invoke = function () {\n                                // need to load the tasks again, because in other\n                                // load listener, they may remove themselves\n                                const loadTasks = target[Zone.__symbol__('loadfalse')];\n                                for (let i = 0; i < loadTasks.length; i++) {\n                                    if (loadTasks[i] === task) {\n                                        loadTasks.splice(i, 1);\n                                    }\n                                }\n                                if (!data.aborted && task.state === SCHEDULED) {\n                                    oriInvoke.call(task);\n                                }\n                            };\n                            loadTasks.push(task);\n                        }\n                        else {\n                            task.invoke();\n                        }\n                    }\n                    else if (!data.aborted && target[XHR_SCHEDULED] === false) {\n                        // error occurs when xhr.send()\n                        target[XHR_ERROR_BEFORE_SCHEDULED] = true;\n                    }\n                }\n            };\n            oriAddListener.call(target, READY_STATE_CHANGE, newListener);\n            const storedTask = target[XHR_TASK];\n            if (!storedTask) {\n                target[XHR_TASK] = task;\n            }\n            sendNative.apply(target, data.args);\n            target[XHR_SCHEDULED] = true;\n            return task;\n        }\n        function placeholderCallback() { }\n        function clearTask(task) {\n            const data = task.data;\n            // Note - ideally, we would call data.target.removeEventListener here, but it's too late\n            // to prevent it from firing. So instead, we store info for the event listener.\n            data.aborted = true;\n            return abortNative.apply(data.target, data.args);\n        }\n        const openNative = patchMethod(XMLHttpRequestPrototype, 'open', () => function (self, args) {\n            self[XHR_SYNC] = args[2] == false;\n            self[XHR_URL] = args[1];\n            return openNative.apply(self, args);\n        });\n        const XMLHTTPREQUEST_SOURCE = 'XMLHttpRequest.send';\n        const fetchTaskAborting = zoneSymbol('fetchTaskAborting');\n        const fetchTaskScheduling = zoneSymbol('fetchTaskScheduling');\n        const sendNative = patchMethod(XMLHttpRequestPrototype, 'send', () => function (self, args) {\n            if (Zone.current[fetchTaskScheduling] === true) {\n                // a fetch is scheduling, so we are using xhr to polyfill fetch\n                // and because we already schedule macroTask for fetch, we should\n                // not schedule a macroTask for xhr again\n                return sendNative.apply(self, args);\n            }\n            if (self[XHR_SYNC]) {\n                // if the XHR is sync there is no task to schedule, just execute the code.\n                return sendNative.apply(self, args);\n            }\n            else {\n                const options = { target: self, url: self[XHR_URL], isPeriodic: false, args: args, aborted: false };\n                const task = scheduleMacroTaskWithCurrentZone(XMLHTTPREQUEST_SOURCE, placeholderCallback, options, scheduleTask, clearTask);\n                if (self && self[XHR_ERROR_BEFORE_SCHEDULED] === true && !options.aborted &&\n                    task.state === SCHEDULED) {\n                    // xhr request throw error when send\n                    // we should invoke task instead of leaving a scheduled\n                    // pending macroTask\n                    task.invoke();\n                }\n            }\n        });\n        const abortNative = patchMethod(XMLHttpRequestPrototype, 'abort', () => function (self, args) {\n            const task = findPendingTask(self);\n            if (task && typeof task.type == 'string') {\n                // If the XHR has already completed, do nothing.\n                // If the XHR has already been aborted, do nothing.\n                // Fix #569, call abort multiple times before done will cause\n                // macroTask task count be negative number\n                if (task.cancelFn == null || (task.data && task.data.aborted)) {\n                    return;\n                }\n                task.zone.cancelTask(task);\n            }\n            else if (Zone.current[fetchTaskAborting] === true) {\n                // the abort is called from fetch polyfill, we need to call native abort of XHR.\n                return abortNative.apply(self, args);\n            }\n            // Otherwise, we are trying to abort an XHR which has not yet been sent, so there is no\n            // task\n            // to cancel. Do nothing.\n        });\n    }\n});\nZone.__load_patch('geolocation', (global) => {\n    /// GEO_LOCATION\n    if (global['navigator'] && global['navigator'].geolocation) {\n        patchPrototype(global['navigator'].geolocation, ['getCurrentPosition', 'watchPosition']);\n    }\n});\nZone.__load_patch('PromiseRejectionEvent', (global, Zone) => {\n    // handle unhandled promise rejection\n    function findPromiseRejectionHandler(evtName) {\n        return function (e) {\n            const eventTasks = findEventTasks(global, evtName);\n            eventTasks.forEach(eventTask => {\n                // windows has added unhandledrejection event listener\n                // trigger the event listener\n                const PromiseRejectionEvent = global['PromiseRejectionEvent'];\n                if (PromiseRejectionEvent) {\n                    const evt = new PromiseRejectionEvent(evtName, { promise: e.promise, reason: e.rejection });\n                    eventTask.invoke(evt);\n                }\n            });\n        };\n    }\n    if (global['PromiseRejectionEvent']) {\n        Zone[zoneSymbol('unhandledPromiseRejectionHandler')] =\n            findPromiseRejectionHandler('unhandledrejection');\n        Zone[zoneSymbol('rejectionHandledHandler')] =\n            findPromiseRejectionHandler('rejectionhandled');\n    }\n});\n"],"names":["resolveDirectory","exports","rootDirLevel","meta","url","console","error","Error","urlString","rootDirectoryLevel","a","document","createElement","href","pathname","numDirsProcessed","index","length","finalPath","slice","protocol","host","isInteger","Number","val","isFinite","Math","floor","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","module","__webpack_modules__","y","__system_context__","g","globalThis","this","Function","e","window","p","autoPublicPath","global","performance","mark","name","performanceMeasure","label","symbolPrefix","__symbol__","checkDuplicate","Zone","constructor","parent","zoneSpec","_parent","_name","_properties","properties","_zoneDelegate","_ZoneDelegate","static","patches","root","zone","current","_currentZoneFrame","currentTask","_currentTask","fn","ignoreDuplicate","hasOwnProperty","perfName","_api","get","key","getZoneWith","fork","wrap","callback","source","_callback","intercept","runGuarded","arguments","run","applyThis","applyArgs","invoke","handleError","runTask","task","NO_ZONE","state","notScheduled","type","eventTask","macroTask","reEntryGuard","running","_transitionTo","scheduled","runCount","previousTask","data","isPeriodic","cancelFn","invokeTask","unknown","_updateTaskCount","scheduleTask","newZone","scheduling","zoneDelegates","_zoneDelegates","_zone","err","scheduleMicroTask","customSchedule","ZoneTask","microTask","scheduleMacroTask","customCancel","scheduleEventTask","cancelTask","canceling","count","i","DELEGATE_ZS","onHasTask","delegate","_","target","hasTaskState","hasTask","onScheduleTask","onInvokeTask","onCancelTask","parentDelegate","_taskCounts","_parentDelegate","_forkZS","onFork","_forkDlgt","_forkCurrZone","_interceptZS","onIntercept","_interceptDlgt","_interceptCurrZone","_invokeZS","onInvoke","_invokeDlgt","_invokeCurrZone","_handleErrorZS","onHandleError","_handleErrorDlgt","_handleErrorCurrZone","_scheduleTaskZS","_scheduleTaskDlgt","_scheduleTaskCurrZone","_invokeTaskZS","_invokeTaskDlgt","_invokeTaskCurrZone","_cancelTaskZS","_cancelTaskDlgt","_cancelTaskCurrZone","_hasTaskZS","_hasTaskDlgt","_hasTaskDlgtOwner","_hasTaskCurrZone","zoneSpecHasTask","parentHasTask","targetZone","apply","returnTask","push","scheduleFn","value","isEmpty","counts","prev","next","change","options","_state","self","useG","call","args","_numberOfNestedTaskFrames","drainMicroTaskQueue","cancelScheduleRequest","toState","fromState1","fromState2","toString","handleId","Object","prototype","toJSON","symbolSetTimeout","symbolPromise","symbolThen","nativeMicroTaskQueuePromise","_microTaskQueue","_isDrainingMicrotaskQueue","nativeScheduleMicroTask","func","resolve","nativeThen","queue","onUnhandledError","microtaskDrainDone","symbol","currentZoneFrame","noop","showUncaughtError","patchEventTarget","patchOnProperties","patchMethod","bindArguments","patchThen","patchMacroTask","patchEventPrototype","isIEOrEdge","getGlobalObjects","ObjectDefineProperty","ObjectGetOwnPropertyDescriptor","ObjectCreate","ArraySlice","patchClass","wrapWithCurrentZone","filterProperties","attachOriginToPatched","_redefineProperty","patchCallbacks","getOwnPropertyDescriptor","defineProperty","ObjectGetPrototypeOf","getPrototypeOf","create","Array","ADD_EVENT_LISTENER_STR","REMOVE_EVENT_LISTENER_STR","ZONE_SYMBOL_ADD_EVENT_LISTENER","ZONE_SYMBOL_REMOVE_EVENT_LISTENER","TRUE_STR","FALSE_STR","ZONE_SYMBOL_PREFIX","scheduleMacroTaskWithCurrentZone","zoneSymbol","isWindowExists","internalWindow","_global","REMOVE_ATTRIBUTE","isPropertyWritable","propertyDesc","writable","set","isWebWorker","WorkerGlobalScope","isNode","process","isBrowser","isMix","zoneSymbolEventNames$1","wrapFn","event","eventNameSymbol","listener","result","errorEvent","message","filename","lineno","colno","preventDefault","patchProperty","obj","prop","desc","enumerable","configurable","onPropPatchedSymbol","originalDescGet","originalDescSet","eventName","newValue","removeEventListener","addEventListener","removeAttribute","onProperties","j","originalInstanceKey","className","OriginalClass","instance","patchFn","proto","delegateName","patchDelegate","funcName","metaCreator","setNative","cbIdx","patched","original","isDetectedIEOrEdge","ieOrEdge","isIE","ua","navigator","userAgent","indexOf","__load_patch","api","_uncaughtPromiseErrors","isDisableWrappingUncaughtPromiseRejection","creationTrace","rejection","stack","uncaughtPromiseError","shift","throwOriginal","handleUnhandledRejection","UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL","handler","isThenable","then","forwardResolution","forwardRejection","ZoneAwarePromise","reject","symbolState","symbolValue","symbolFinally","symbolParentPromiseValue","symbolParentPromiseState","UNRESOLVED","RESOLVED","REJECTED","REJECTED_NO_CATCH","makeResolver","promise","v","resolvePromise","once","wasCalled","wrappedFunction","TYPE_ERROR","CURRENT_TASK_TRACE_SYMBOL","onceWrapper","TypeError","clearRejectedNoCatch","trace","scheduleResolveOrReject","JSON","stringify","readableObjectToString","REJECTION_HANDLED_HANDLER","splice","chainPromise","onFulfilled","onRejected","promiseState","parentPromiseValue","isFinallyPromise","AggregateError","values","Symbol","iterator","Promise","promises","finished","errors","res","rej","onResolve","onReject","allWithCallback","thenCallback","status","errorCallback","reason","unresolvedCount","valueIndex","resolvedValues","curValueIndex","thenErr","executor","toStringTag","species","_a","C","catch","finally","onFinally","race","all","NativePromise","symbolThenPatched","Ctor","originalThen","zoneify","resultPromise","ctor","originalFunctionToString","ORIGINAL_DELEGATE_SYMBOL","PROMISE_SYMBOL","ERROR_SYMBOL","newFunctionToString","originalDelegate","nativePromise","nativeError","originalObjectToString","passiveSupported","OPTIMIZED_ZONE_EVENT_TASK_DATA","zoneSymbolEventNames","globalSources","EVENT_NAME_SYMBOL_REGX","RegExp","IMMEDIATE_PROPAGATION_SYMBOL","prepareEventNames","eventNameToString","falseEventName","trueEventName","symbolCapture","apis","patchOptions","ADD_EVENT_LISTENER","add","REMOVE_EVENT_LISTENER","rm","LISTENERS_EVENT_LISTENER","listeners","REMOVE_ALL_LISTENERS_EVENT_LISTENER","rmAll","zoneSymbolAddEventListener","ADD_EVENT_LISTENER_SOURCE","PREPEND_EVENT_LISTENER","PREPEND_EVENT_LISTENER_SOURCE","isRemoved","handleEvent","globalCallback","context","isCapture","tasks","copyTasks","globalZoneAwareCallback","globalZoneAwareCaptureCallback","patchEventTargetMethods","useGlobalCallback","validateHandler","vh","chkDup","returnTarget","rt","taskData","nativeAddEventListener","nativeRemoveEventListener","nativeListeners","nativeRemoveAllListeners","nativePrependEventListener","prepend","customSchedulePrepend","isExisting","capture","symbolEventNames","symbolEventName","existingTasks","allRemoved","compare","diff","typeOfDelegate","unpatchedEvents","passiveEvents","makeAddListener","nativeListener","addSource","customScheduleFn","customCancelFn","transferEventName","isHandleEvent","passive","assign","buildEventListenerOptions","constructorName","targetSource","unshift","existingTask","findEventTasks","symbolCaptureEventName","captureTasks","removeTasks","keys","match","exec","evtName","results","foundTasks","captureFalseTasks","captureTrueTasks","concat","Event","targetName","method","callbacks","nativeDelegate","opts","forEach","descriptor","ignoreProperties","tip","filter","ip","targetIgnoreProperties","op","patchFilteredProperties","getOnEventNames","getOwnPropertyNames","startsWith","map","substring","propertyDescriptorPatch","patchTargets","ignoreErrorProperties","eventNames","SYMBOL_BLACK_LISTED_EVENTS","SYMBOL_UNPATCHED_EVENTS","taskSymbol","patchTimer","setName","cancelName","nameSuffix","clearNative","tasksByHandleId","clearTask","delay","handle","ref","unref","bind","id","eventTargetPatch","EVENT_TARGET","legacyPatch","clear","blockingMethods","s","patchEvent","XMLHttpRequestEventTarget","customElements","patchCustomElements","XMLHttpRequest","XMLHttpRequestPrototype","oriAddListener","oriRemoveListener","XMLHttpRequestEventTargetPrototype","READY_STATE_CHANGE","SCHEDULED","XHR_SCHEDULED","XHR_ERROR_BEFORE_SCHEDULED","XHR_LISTENER","newListener","readyState","DONE","aborted","loadTasks","oriInvoke","XHR_TASK","sendNative","placeholderCallback","abortNative","openNative","XHR_SYNC","XHR_URL","fetchTaskAborting","fetchTaskScheduling","patchXHR","geolocation","fnNames","patchPrototype","findPromiseRejectionHandler","PromiseRejectionEvent","evt"],"sourceRoot":""}